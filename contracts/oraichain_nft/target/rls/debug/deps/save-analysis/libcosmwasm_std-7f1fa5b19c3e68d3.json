{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2","program":"/home/kj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cosmwasm_std","--edition=2018","/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=7f1fa5b19c3e68d3","-C","extra-filename=-7f1fa5b19c3e68d3","--out-dir","/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps","-L","dependency=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps","--extern","base64=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libbase64-8bcb81a96746c276.rmeta","--extern","cosmwasm_derive=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libcosmwasm_derive-32684615e433393d.so","--extern","schemars=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libschemars-f449b0a35ba37e19.rmeta","--extern","serde=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libserde-6737841139abe9f9.rmeta","--extern","serde_json_wasm=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libserde_json_wasm-deb15a8888875e23.rmeta","--extern","thiserror=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libthiserror-97521453084dfd71.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/kj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libcosmwasm_std-7f1fa5b19c3e68d3.rmeta"},"prelude":{"crate_id":{"name":"cosmwasm_std","disambiguator":[16504270971007114194,0]},"crate_root":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src","external_crates":[{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","num":20,"id":{"name":"schemars","disambiguator":[12182862464473148887,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","num":21,"id":{"name":"schemars_derive","disambiguator":[3037027020480904855,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","num":22,"id":{"name":"serde_json","disambiguator":[7627530436705154322,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","num":23,"id":{"name":"serde","disambiguator":[16226190301537249563,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","num":24,"id":{"name":"serde_derive","disambiguator":[15475905651234449479,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","num":25,"id":{"name":"itoa","disambiguator":[13487529298765147476,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","num":26,"id":{"name":"ryu","disambiguator":[4097666003317404566,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","num":27,"id":{"name":"thiserror","disambiguator":[4149436085188247112,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","num":28,"id":{"name":"thiserror_impl","disambiguator":[9917814298387580220,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","num":29,"id":{"name":"cosmwasm_derive","disambiguator":[12209117549304300058,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","num":30,"id":{"name":"base64","disambiguator":[5300500336962509114,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/serde.rs","num":31,"id":{"name":"serde_json_wasm","disambiguator":[13794344560351386905,0]}}],"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":0,"byte_end":2609,"line_start":1,"line_end":76,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2273},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/mod.rs","byte_start":43518,"byte_end":43526,"line_start":4,"line_end":4,"column_start":21,"column_end":29},"alias_span":null,"name":"StdError","value":"","parent":{"krate":0,"index":201}},{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/mod.rs","byte_start":43528,"byte_end":43537,"line_start":4,"line_end":4,"column_start":31,"column_end":40},"alias_span":null,"name":"StdResult","value":"","parent":{"krate":0,"index":201}},{"kind":"Use","ref_id":{"krate":0,"index":2540},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/mod.rs","byte_start":43562,"byte_end":43573,"line_start":5,"line_end":5,"column_start":23,"column_end":34},"alias_span":null,"name":"SystemError","value":"","parent":{"krate":0,"index":201}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96018,"byte_end":96022,"line_start":13,"line_end":13,"column_start":21,"column_end":25},"alias_span":null,"name":"attr","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":3729},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96024,"byte_end":96033,"line_start":13,"line_end":13,"column_start":27,"column_end":36},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":3794},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96053,"byte_end":96060,"line_start":14,"line_end":14,"column_start":18,"column_end":25},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":3876},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96087,"byte_end":96101,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"alias_span":null,"name":"ContractResult","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":4059},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96124,"byte_end":96131,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"alias_span":null,"name":"BankMsg","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":3953},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96133,"byte_end":96142,"line_start":16,"line_end":16,"column_start":31,"column_end":40},"alias_span":null,"name":"CosmosMsg","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":4270},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96144,"byte_end":96154,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"alias_span":null,"name":"StakingMsg","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":4418},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96156,"byte_end":96163,"line_start":16,"line_end":16,"column_start":54,"column_end":61},"alias_span":null,"name":"WasmMsg","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":4428},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96204,"byte_end":96218,"line_start":18,"line_end":18,"column_start":18,"column_end":32},"alias_span":null,"name":"HandleResponse","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":645},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96220,"byte_end":96232,"line_start":18,"line_end":18,"column_start":34,"column_end":46},"alias_span":null,"name":"HandleResult","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":4504},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96271,"byte_end":96283,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"alias_span":null,"name":"InitResponse","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96285,"byte_end":96295,"line_start":20,"line_end":20,"column_start":30,"column_end":40},"alias_span":null,"name":"InitResult","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":4577},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96337,"byte_end":96352,"line_start":22,"line_end":22,"column_start":19,"column_end":34},"alias_span":null,"name":"MigrateResponse","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96354,"byte_end":96367,"line_start":22,"line_end":22,"column_start":36,"column_end":49},"alias_span":null,"name":"MigrateResult","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96407,"byte_end":96420,"line_start":24,"line_end":24,"column_start":17,"column_end":30},"alias_span":null,"name":"QueryResponse","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":720},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96422,"byte_end":96433,"line_start":24,"line_end":24,"column_start":32,"column_end":43},"alias_span":null,"name":"QueryResult","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":4718},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/mod.rs","byte_start":96459,"byte_end":96471,"line_start":25,"line_end":25,"column_start":24,"column_end":36},"alias_span":null,"name":"SystemResult","value":"","parent":{"krate":0,"index":477}},{"kind":"Use","ref_id":{"krate":0,"index":1479},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":419,"byte_end":432,"line_start":22,"line_end":22,"column_start":28,"column_end":41},"alias_span":null,"name":"CanonicalAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":419,"byte_end":432,"line_start":22,"line_end":22,"column_start":28,"column_end":41},"alias_span":null,"name":"CanonicalAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":434,"byte_end":443,"line_start":22,"line_end":22,"column_start":43,"column_end":52},"alias_span":null,"name":"HumanAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1433},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":434,"byte_end":443,"line_start":22,"line_end":22,"column_start":43,"column_end":52},"alias_span":null,"name":"HumanAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":470,"byte_end":476,"line_start":23,"line_end":23,"column_start":25,"column_end":31},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1527},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":470,"byte_end":476,"line_start":23,"line_end":23,"column_start":25,"column_end":31},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":478,"byte_end":487,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"alias_span":null,"name":"ByteArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":513,"byte_end":517,"line_start":24,"line_end":24,"column_start":24,"column_end":28},"alias_span":null,"name":"coin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":519,"byte_end":524,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"coins","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":526,"byte_end":535,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"alias_span":null,"name":"has_coins","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2198},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":537,"byte_end":541,"line_start":24,"line_end":24,"column_start":48,"column_end":52},"alias_span":null,"name":"Coin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2263},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":566,"byte_end":570,"line_start":25,"line_end":25,"column_start":23,"column_end":27},"alias_span":null,"name":"Deps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":572,"byte_end":579,"line_start":25,"line_end":25,"column_start":29,"column_end":36},"alias_span":null,"name":"DepsMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":176},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":581,"byte_end":590,"line_start":25,"line_end":25,"column_start":38,"column_end":47},"alias_span":null,"name":"OwnedDeps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2273},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":617,"byte_end":625,"line_start":26,"line_end":26,"column_start":25,"column_end":33},"alias_span":null,"name":"StdError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":627,"byte_end":636,"line_start":26,"line_end":26,"column_start":35,"column_end":44},"alias_span":null,"name":"StdResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2540},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":638,"byte_end":649,"line_start":26,"line_end":26,"column_start":46,"column_end":57},"alias_span":null,"name":"SystemError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2552},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":707,"byte_end":712,"line_start":28,"line_end":28,"column_start":27,"column_end":32},"alias_span":null,"name":"Order","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":714,"byte_end":716,"line_start":28,"line_end":28,"column_start":34,"column_end":36},"alias_span":null,"name":"KV","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2562},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":741,"byte_end":748,"line_start":29,"line_end":29,"column_start":23,"column_end":30},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2586},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":750,"byte_end":757,"line_start":29,"line_end":29,"column_start":32,"column_end":39},"alias_span":null,"name":"Uint128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2587},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":750,"byte_end":757,"line_start":29,"line_end":29,"column_start":32,"column_end":39},"alias_span":null,"name":"Uint128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3078},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":788,"byte_end":806,"line_start":31,"line_end":31,"column_start":5,"column_end":23},"alias_span":null,"name":"AllBalanceResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3400},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":808,"byte_end":830,"line_start":31,"line_end":31,"column_start":25,"column_end":47},"alias_span":null,"name":"AllDelegationsResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3018},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":832,"byte_end":847,"line_start":31,"line_end":31,"column_start":49,"column_end":64},"alias_span":null,"name":"BalanceResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2819},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":849,"byte_end":858,"line_start":31,"line_end":31,"column_start":66,"column_end":75},"alias_span":null,"name":"BankQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3340},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":860,"byte_end":879,"line_start":31,"line_end":31,"column_start":77,"column_end":96},"alias_span":null,"name":"BondedDenomResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":464},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":885,"byte_end":896,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"alias_span":null,"name":"CustomQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3402},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":898,"byte_end":908,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"alias_span":null,"name":"Delegation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3528},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":910,"byte_end":924,"line_start":32,"line_end":32,"column_start":30,"column_end":44},"alias_span":null,"name":"FullDelegation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2679},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":926,"byte_end":938,"line_start":32,"line_end":32,"column_start":46,"column_end":58},"alias_span":null,"name":"QueryRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3274},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":940,"byte_end":952,"line_start":32,"line_end":32,"column_start":60,"column_end":72},"alias_span":null,"name":"StakingQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3660},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":954,"byte_end":963,"line_start":32,"line_end":32,"column_start":74,"column_end":83},"alias_span":null,"name":"Validator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3600},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":969,"byte_end":987,"line_start":33,"line_end":33,"column_start":5,"column_end":23},"alias_span":null,"name":"ValidatorsResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2953},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":989,"byte_end":998,"line_start":33,"line_end":33,"column_start":25,"column_end":34},"alias_span":null,"name":"WasmQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1054,"byte_end":1058,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"alias_span":null,"name":"attr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3729},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1060,"byte_end":1069,"line_start":37,"line_end":37,"column_start":11,"column_end":20},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4059},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1071,"byte_end":1078,"line_start":37,"line_end":37,"column_start":22,"column_end":29},"alias_span":null,"name":"BankMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3794},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1080,"byte_end":1087,"line_start":37,"line_end":37,"column_start":31,"column_end":38},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3876},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1089,"byte_end":1103,"line_start":37,"line_end":37,"column_start":40,"column_end":54},"alias_span":null,"name":"ContractResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3953},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1105,"byte_end":1114,"line_start":37,"line_end":37,"column_start":56,"column_end":65},"alias_span":null,"name":"CosmosMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4428},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1116,"byte_end":1130,"line_start":37,"line_end":37,"column_start":67,"column_end":81},"alias_span":null,"name":"HandleResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":645},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1132,"byte_end":1144,"line_start":37,"line_end":37,"column_start":83,"column_end":95},"alias_span":null,"name":"HandleResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4504},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1150,"byte_end":1162,"line_start":38,"line_end":38,"column_start":5,"column_end":17},"alias_span":null,"name":"InitResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1164,"byte_end":1174,"line_start":38,"line_end":38,"column_start":19,"column_end":29},"alias_span":null,"name":"InitResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4577},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1176,"byte_end":1191,"line_start":38,"line_end":38,"column_start":31,"column_end":46},"alias_span":null,"name":"MigrateResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1193,"byte_end":1206,"line_start":38,"line_end":38,"column_start":48,"column_end":61},"alias_span":null,"name":"MigrateResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1208,"byte_end":1221,"line_start":38,"line_end":38,"column_start":63,"column_end":76},"alias_span":null,"name":"QueryResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":720},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1223,"byte_end":1234,"line_start":38,"line_end":38,"column_start":78,"column_end":89},"alias_span":null,"name":"QueryResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4270},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1240,"byte_end":1250,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"alias_span":null,"name":"StakingMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4718},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1252,"byte_end":1264,"line_start":39,"line_end":39,"column_start":17,"column_end":29},"alias_span":null,"name":"SystemResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4418},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1266,"byte_end":1273,"line_start":39,"line_end":39,"column_start":31,"column_end":38},"alias_span":null,"name":"WasmMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":832},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1301,"byte_end":1312,"line_start":41,"line_end":41,"column_start":24,"column_end":35},"alias_span":null,"name":"from_binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":829},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1314,"byte_end":1324,"line_start":41,"line_end":41,"column_start":37,"column_end":47},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1326,"byte_end":1335,"line_start":41,"line_end":41,"column_start":49,"column_end":58},"alias_span":null,"name":"to_binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":834},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1337,"byte_end":1343,"line_start":41,"line_end":41,"column_start":60,"column_end":66},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4726},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1370,"byte_end":1383,"line_start":42,"line_end":42,"column_start":25,"column_end":38},"alias_span":null,"name":"MemoryStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":968},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1409,"byte_end":1412,"line_start":43,"line_end":43,"column_start":25,"column_end":28},"alias_span":null,"name":"Api","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1414,"byte_end":1421,"line_start":43,"line_end":43,"column_start":30,"column_end":37},"alias_span":null,"name":"Querier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":972},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1423,"byte_end":1436,"line_start":43,"line_end":43,"column_start":39,"column_end":52},"alias_span":null,"name":"QuerierResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4730},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1438,"byte_end":1452,"line_start":43,"line_end":43,"column_start":54,"column_end":68},"alias_span":null,"name":"QuerierWrapper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":962},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1454,"byte_end":1461,"line_start":43,"line_end":43,"column_start":70,"column_end":77},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4804},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1487,"byte_end":1496,"line_start":44,"line_end":44,"column_start":24,"column_end":33},"alias_span":null,"name":"BlockInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4940},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1498,"byte_end":1510,"line_start":44,"line_end":44,"column_start":35,"column_end":47},"alias_span":null,"name":"ContractInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5002},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1512,"byte_end":1517,"line_start":44,"line_end":44,"column_start":49,"column_end":54},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4739},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1519,"byte_end":1522,"line_start":44,"line_end":44,"column_start":56,"column_end":59},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4875},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":1524,"byte_end":1535,"line_start":44,"line_end":44,"column_start":61,"column_end":72},"alias_span":null,"name":"MessageInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1386},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2315,"byte_end":2324,"line_start":68,"line_end":68,"column_start":9,"column_end":18},"alias_span":null,"name":"digit_sum","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":1335},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2326,"byte_end":2343,"line_start":68,"line_end":68,"column_start":20,"column_end":37},"alias_span":null,"name":"mock_dependencies","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2345,"byte_end":2376,"line_start":68,"line_end":68,"column_start":39,"column_end":70},"alias_span":null,"name":"mock_dependencies_with_balances","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":1345},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2378,"byte_end":2386,"line_start":68,"line_end":68,"column_start":72,"column_end":80},"alias_span":null,"name":"mock_env","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2388,"byte_end":2397,"line_start":68,"line_end":68,"column_start":82,"column_end":91},"alias_span":null,"name":"mock_info","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":1384},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2407,"byte_end":2421,"line_start":69,"line_end":69,"column_start":9,"column_end":23},"alias_span":null,"name":"riffle_shuffle","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":5068},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2423,"byte_end":2434,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"alias_span":null,"name":"BankQuerier","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":5058},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2436,"byte_end":2443,"line_start":69,"line_end":69,"column_start":38,"column_end":45},"alias_span":null,"name":"MockApi","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":1349},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2445,"byte_end":2456,"line_start":69,"line_end":69,"column_start":47,"column_end":58},"alias_span":null,"name":"MockQuerier","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":1348},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2458,"byte_end":2488,"line_start":69,"line_end":69,"column_start":60,"column_end":90},"alias_span":null,"name":"MockQuerierCustomHandlerResult","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":1337},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2498,"byte_end":2509,"line_start":70,"line_end":70,"column_start":9,"column_end":20},"alias_span":null,"name":"MockStorage","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":5074},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2511,"byte_end":2525,"line_start":70,"line_end":70,"column_start":22,"column_end":36},"alias_span":null,"name":"StakingQuerier","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":0,"index":1334},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2527,"byte_end":2545,"line_start":70,"line_end":70,"column_start":38,"column_end":56},"alias_span":null,"name":"MOCK_CONTRACT_ADDR","value":"","parent":{"krate":0,"index":1388}},{"kind":"Use","ref_id":{"krate":29,"index":10},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2597,"byte_end":2608,"line_start":76,"line_end":76,"column_start":26,"column_end":37},"alias_span":null,"name":"entry_point","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":0,"byte_end":2609,"line_start":1,"line_end":76,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":59},{"krate":0,"index":138},{"krate":0,"index":162},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":263},{"krate":0,"index":277},{"krate":0,"index":438},{"krate":0,"index":477},{"krate":0,"index":808},{"krate":0,"index":839},{"krate":0,"index":885},{"krate":0,"index":1000},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1183},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1388},{"krate":0,"index":1429}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: field_reassign_with_default)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":57,"byte_end":103,"line_start":2,"line_end":2,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":2839,"byte_end":2848,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"HumanAddr","qualname":"::addresses::HumanAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1434},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":2849,"byte_end":2859,"line_start":9,"line_end":9,"column_start":22,"column_end":32},"name":"0","qualname":"::addresses::HumanAddr::0","value":"std::string::String","parent":{"krate":0,"index":1432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":2891,"byte_end":2897,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"as_str","qualname":"<HumanAddr>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1479},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":4989,"byte_end":5002,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"CanonicalAddr","qualname":"::addresses::CanonicalAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1481},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5003,"byte_end":5013,"line_start":92,"line_end":92,"column_start":26,"column_end":36},"name":"0","qualname":"::addresses::CanonicalAddr::0","value":"binary::Binary","parent":{"krate":0,"index":1479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5925,"byte_end":5933,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<CanonicalAddr>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1526},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16326,"byte_end":16332,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Binary","qualname":"::binary::Binary","value":"","parent":null,"children":[],"decl_id":null,"docs":" Binary is a wrapper around Vec<u8> to add base64 de/serialization\n with serde. It also adds some helper methods to help encode inline.","sig":null,"attributes":[{"value":"/ Binary is a wrapper around Vec<u8> to add base64 de/serialization","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16017,"byte_end":16086,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ with serde. It also adds some helper methods to help encode inline.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16087,"byte_end":16158,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16159,"byte_end":16162,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16163,"byte_end":16248,"line_start":13,"line_end":13,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1547},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16362,"byte_end":16373,"line_start":15,"line_end":15,"column_start":48,"column_end":59},"name":"0","qualname":"::binary::Binary::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"schemars(with = \"String\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16333,"byte_end":16361,"line_start":15,"line_end":15,"column_start":19,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16503,"byte_end":16514,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"from_base64","qualname":"<Binary>::from_base64","value":"pub fn from_base64(&str) -> StdResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" take an (untrusted) string and decode it into bytes.\n fails if it is not valid base64\n","sig":null,"attributes":[{"value":"/ take an (untrusted) string and decode it into bytes.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16395,"byte_end":16451,"line_start":18,"line_end":18,"column_start":5,"column_end":61}},{"value":"/ fails if it is not valid base64","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16456,"byte_end":16491,"line_start":19,"line_end":19,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16833,"byte_end":16842,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"to_base64","qualname":"<Binary>::to_base64","value":"pub fn to_base64(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" encode to base64 string (guaranteed to be success as we control the data inside).\n this returns normalized form (with trailing = if needed)\n","sig":null,"attributes":[{"value":"/ encode to base64 string (guaranteed to be success as we control the data inside).","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16671,"byte_end":16756,"line_start":25,"line_end":25,"column_start":5,"column_end":90}},{"value":"/ this returns normalized form (with trailing = if needed)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16761,"byte_end":16821,"line_start":26,"line_end":26,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16912,"byte_end":16920,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Binary>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17964,"byte_end":17972,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Binary>::to_array","value":"pub fn to_array<A>(&Self) -> StdResult<A> where A: ByteArray","parent":null,"children":[],"decl_id":null,"docs":" Copies content into fixed-sized array.\n The result type `A: ByteArray` is a workaround for\n the missing [const-generics](https://rust-lang.github.io/rfcs/2000-const-generics.html).\n `A` is a fixed-sized array like `[u8; 8]`.","sig":null,"attributes":[{"value":"/ Copies content into fixed-sized array.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16976,"byte_end":17018,"line_start":35,"line_end":35,"column_start":5,"column_end":47}},{"value":"/ The result type `A: ByteArray` is a workaround for","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17023,"byte_end":17077,"line_start":36,"line_end":36,"column_start":5,"column_end":59}},{"value":"/ the missing [const-generics](https://rust-lang.github.io/rfcs/2000-const-generics.html).","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17082,"byte_end":17174,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ `A` is a fixed-sized array like `[u8; 8]`.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17179,"byte_end":17225,"line_start":38,"line_end":38,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17230,"byte_end":17233,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ByteArray is implemented for `[u8; 0]` to `[u8; 64]`, such that","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17238,"byte_end":17305,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"/ we are limited to 64 bytes for now.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17310,"byte_end":17349,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17354,"byte_end":17357,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17362,"byte_end":17376,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17381,"byte_end":17384,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Copy to array of explicit length","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17389,"byte_end":17425,"line_start":45,"line_end":45,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17430,"byte_end":17433,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17438,"byte_end":17445,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::Binary;","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17450,"byte_end":17481,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/ let binary = Binary::from(&[0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17486,"byte_end":17537,"line_start":49,"line_end":49,"column_start":5,"column_end":56}},{"value":"/ let array: [u8; 3] = binary.to_array().unwrap();","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17542,"byte_end":17594,"line_start":50,"line_end":50,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(array, [0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17599,"byte_end":17641,"line_start":51,"line_end":51,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17646,"byte_end":17653,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17658,"byte_end":17661,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Copy to integer","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17666,"byte_end":17685,"line_start":54,"line_end":54,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17690,"byte_end":17693,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17698,"byte_end":17705,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::Binary;","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17710,"byte_end":17741,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/ let binary = Binary::from(&[0x8b, 0x67, 0x64, 0x84, 0xb5, 0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17746,"byte_end":17827,"line_start":58,"line_end":58,"column_start":5,"column_end":86}},{"value":"/ let num = u64::from_be_bytes(binary.to_array().unwrap());","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17832,"byte_end":17893,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num, 10045108015024774967);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17898,"byte_end":17940,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":17945,"byte_end":17952,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":136},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":22699,"byte_end":22708,"line_start":228,"line_end":228,"column_start":18,"column_end":27},"name":"ByteArray","qualname":"::binary::ByteArray","value":"ByteArray: Sized + AsMut<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" A marker trait for `[u8; $N]`, which is needed as long as\n https://rust-lang.github.io/rfcs/2000-const-generics.html is not stable.","sig":null,"attributes":[{"value":"/ A marker trait for `[u8; $N]`, which is needed as long as","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":22454,"byte_end":22515,"line_start":224,"line_end":224,"column_start":1,"column_end":62}},{"value":"/ https://rust-lang.github.io/rfcs/2000-const-generics.html is not stable.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":22516,"byte_end":22592,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":22593,"byte_end":22596,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Implementing this for other types (like Vec<u8>) results in undefined behaviour.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":22597,"byte_end":22681,"line_start":227,"line_end":227,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":2198},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34039,"byte_end":34043,"line_start":7,"line_end":7,"column_start":12,"column_end":16},"name":"Coin","qualname":"::coins::Coin","value":"Coin { denom, amount }","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":2200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2199},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34054,"byte_end":34059,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"name":"denom","qualname":"::coins::Coin::denom","value":"std::string::String","parent":{"krate":0,"index":2198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2200},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34077,"byte_end":34083,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"name":"amount","qualname":"::coins::Coin::amount","value":"math::Uint128","parent":{"krate":0,"index":2198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34120,"byte_end":34123,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<Coin>::new","value":"pub fn new<S: Into<String>>(u128, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":155},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34847,"byte_end":34852,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"coins","qualname":"::coins::coins","value":"pub fn coins<S: Into<String>>(u128, S) -> Vec<Coin>","parent":null,"children":[],"decl_id":null,"docs":" A shortcut constructor for a set of one denomination of coins","sig":null,"attributes":[{"value":"/ A shortcut constructor for a set of one denomination of coins","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34279,"byte_end":34344,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34345,"byte_end":34348,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34349,"byte_end":34363,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34364,"byte_end":34367,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34368,"byte_end":34375,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, CosmosMsg, HandleResponse};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34376,"byte_end":34444,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ # use cosmwasm_std::testing::{mock_env, mock_info};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34445,"byte_end":34500,"line_start":27,"line_end":27,"column_start":1,"column_end":56}},{"value":"/ # let env = mock_env();","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34501,"byte_end":34528,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ # let info = mock_info(\"sender\", &[]);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34529,"byte_end":34571,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ let tip = coins(123, \"ucosm\");","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34572,"byte_end":34606,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34607,"byte_end":34610,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut response: HandleResponse = Default::default();","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34611,"byte_end":34669,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ response.messages = vec![CosmosMsg::Bank(BankMsg::Send {","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34670,"byte_end":34730,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/   from_address: env.contract.address,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34731,"byte_end":34772,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/   to_address: info.sender,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34773,"byte_end":34803,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/   amount: tip,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34804,"byte_end":34822,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/ })];","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34823,"byte_end":34831,"line_start":37,"line_end":37,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34832,"byte_end":34839,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":157},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35534,"byte_end":35538,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"coin","qualname":"::coins::coin","value":"pub fn coin<S: Into<String>>(u128, S) -> Coin","parent":null,"children":[],"decl_id":null,"docs":" A shorthand constructor for Coin","sig":null,"attributes":[{"value":"/ A shorthand constructor for Coin","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34942,"byte_end":34978,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34979,"byte_end":34982,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34983,"byte_end":34997,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34998,"byte_end":35001,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35002,"byte_end":35009,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coin, BankMsg, CosmosMsg, HandleResponse};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35010,"byte_end":35077,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ # use cosmwasm_std::testing::{mock_env, mock_info};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35078,"byte_end":35133,"line_start":49,"line_end":49,"column_start":1,"column_end":56}},{"value":"/ # let env = mock_env();","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35134,"byte_end":35161,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/ # let info = mock_info(\"sender\", &[]);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35162,"byte_end":35204,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/ let tip = vec![","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35205,"byte_end":35224,"line_start":52,"line_end":52,"column_start":1,"column_end":20}},{"value":"/     coin(123, \"ucosm\"),","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35225,"byte_end":35252,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/     coin(24, \"ustake\"),","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35253,"byte_end":35280,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/ ];","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35281,"byte_end":35287,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35288,"byte_end":35291,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut response: HandleResponse = Default::default();","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35292,"byte_end":35350,"line_start":57,"line_end":57,"column_start":1,"column_end":59}},{"value":"/ response.messages = vec![CosmosMsg::Bank(BankMsg::Send {","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35351,"byte_end":35411,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/     from_address: env.contract.address,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35412,"byte_end":35455,"line_start":59,"line_end":59,"column_start":1,"column_end":44}},{"value":"/     to_address: info.sender,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35456,"byte_end":35488,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/     amount: tip,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35489,"byte_end":35509,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/ })];","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35510,"byte_end":35518,"line_start":62,"line_end":62,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35519,"byte_end":35526,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":159},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35710,"byte_end":35719,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"has_coins","qualname":"::coins::has_coins","value":"pub fn has_coins(&[Coin], &Coin) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has_coins returns true if the list of coins has at least the required amount\n","sig":null,"attributes":[{"value":"/ has_coins returns true if the list of coins has at least the required amount","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":35622,"byte_end":35702,"line_start":68,"line_end":68,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":176},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":37832,"byte_end":37841,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"OwnedDeps","qualname":"::deps::OwnedDeps","value":"OwnedDeps { storage, api, querier }","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" Holds all external dependencies of the contract.\n Designed to allow easy dependency injection at runtime.\n This cannot be copied or cloned since it would behave differently\n for mock storages and a bridge storage in the VM.\n","sig":null,"attributes":[{"value":"/ Holds all external dependencies of the contract.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":37584,"byte_end":37636,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/ Designed to allow easy dependency injection at runtime.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":37637,"byte_end":37696,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/ This cannot be copied or cloned since it would behave differently","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":37697,"byte_end":37766,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ for mock storages and a bridge storage in the VM.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":37767,"byte_end":37820,"line_start":7,"line_end":7,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":180},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":37884,"byte_end":37891,"line_start":9,"line_end":9,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::OwnedDeps::storage","value":"S","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":181},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":37904,"byte_end":37907,"line_start":10,"line_end":10,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::OwnedDeps::api","value":"A","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":182},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":37920,"byte_end":37927,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::OwnedDeps::querier","value":"Q","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":37946,"byte_end":37953,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"DepsMut","qualname":"::deps::DepsMut","value":"DepsMut { storage, api, querier }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":185},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":37968,"byte_end":37975,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::DepsMut::storage","value":"&'a mut (dyn traits::Storage + 'a)","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":186},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38006,"byte_end":38009,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::DepsMut::api","value":"&'a (dyn traits::Api + 'a)","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":187},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38032,"byte_end":38039,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::DepsMut::querier","value":"traits::QuerierWrapper<'a>","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2263},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38098,"byte_end":38102,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Deps","qualname":"::deps::Deps","value":"Deps { storage, api, querier }","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2265},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38117,"byte_end":38124,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::Deps::storage","value":"&'a (dyn traits::Storage + 'a)","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2266},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38151,"byte_end":38154,"line_start":23,"line_end":23,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::Deps::api","value":"&'a (dyn traits::Api + 'a)","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2267},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38177,"byte_end":38184,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::Deps::querier","value":"traits::QuerierWrapper<'a>","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38278,"byte_end":38284,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<OwnedDeps<S, A, Q>>::as_ref","value":"pub fn as_ref(&Self) -> Deps","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38473,"byte_end":38479,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<OwnedDeps<S, A, Q>>::as_mut","value":"pub fn as_mut(&mut Self) -> DepsMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38707,"byte_end":38713,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<DepsMut>::as_ref","value":"pub fn as_ref(&Self) -> Deps","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38878,"byte_end":38884,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"branch","qualname":"<DepsMut>::branch","value":"pub fn branch(&mut Self) -> DepsMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2286},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44552,"byte_end":44562,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"GenericErr","qualname":"::errors::std_error::StdError::GenericErr","value":"StdError::GenericErr { msg }","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":" Whenever there is no specific error type available\n","sig":null,"attributes":[{"value":"/ Whenever there is no specific error type available","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44456,"byte_end":44510,"line_start":22,"line_end":22,"column_start":5,"column_end":59}},{"value":"error(\"Generic error: {msg}\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44515,"byte_end":44547,"line_start":23,"line_end":23,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":2288},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44711,"byte_end":44724,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"InvalidBase64","qualname":"::errors::std_error::StdError::InvalidBase64","value":"StdError::InvalidBase64 { msg }","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid Base64 string: {msg}\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44666,"byte_end":44706,"line_start":29,"line_end":29,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":2290},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44899,"byte_end":44914,"line_start":36,"line_end":36,"column_start":5,"column_end":20},"name":"InvalidDataSize","qualname":"::errors::std_error::StdError::InvalidDataSize","value":"StdError::InvalidDataSize { expected, actual }","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid data size: expected={expected} actual={actual}\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44828,"byte_end":44894,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":2293},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":45216,"byte_end":45227,"line_start":44,"line_end":44,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::errors::std_error::StdError::InvalidUtf8","value":"StdError::InvalidUtf8 { msg }","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":" Whenever UTF-8 bytes cannot be decoded into a unicode string, e.g. in String::from_utf8 or str::from_utf8.\n","sig":null,"attributes":[{"value":"/ Whenever UTF-8 bytes cannot be decoded into a unicode string, e.g. in String::from_utf8 or str::from_utf8.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":45041,"byte_end":45151,"line_start":42,"line_end":42,"column_start":5,"column_end":115}},{"value":"error(\"Cannot decode UTF8 bytes into string: {msg}\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":45156,"byte_end":45211,"line_start":43,"line_end":43,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":2295},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":45364,"byte_end":45372,"line_start":50,"line_end":50,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::errors::std_error::StdError::NotFound","value":"StdError::NotFound { kind }","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"{kind} not found\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":45331,"byte_end":45359,"line_start":49,"line_end":49,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":2297},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":45538,"byte_end":45546,"line_start":56,"line_end":56,"column_start":5,"column_end":13},"name":"ParseErr","qualname":"::errors::std_error::StdError::ParseErr","value":"StdError::ParseErr { target_type, msg }","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error parsing into type {target_type}: {msg}\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":45477,"byte_end":45533,"line_start":55,"line_end":55,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":2300},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":45786,"byte_end":45798,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"SerializeErr","qualname":"::errors::std_error::StdError::SerializeErr","value":"StdError::SerializeErr { source_type, msg }","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error serializing type {source_type}: {msg}\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":45726,"byte_end":45781,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":2303},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":46038,"byte_end":46047,"line_start":72,"line_end":72,"column_start":5,"column_end":14},"name":"Underflow","qualname":"::errors::std_error::StdError::Underflow","value":"StdError::Underflow { minuend, subtrahend }","parent":{"krate":0,"index":2273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Cannot subtract {subtrahend} from {minuend}\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":45978,"byte_end":46033,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":2273},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44441,"byte_end":44449,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"StdError","qualname":"::errors::std_error::StdError","value":"pub enum StdError {\n    GenericErr {\n            msg: String,\n        },\n    InvalidBase64 {\n            msg: String,\n        },\n    InvalidDataSize {\n            expected: u64,\n            actual: u64,\n        },\n    InvalidUtf8 {\n            msg: String,\n        },\n    NotFound {\n            kind: String,\n        },\n    ParseErr {\n            target_type: String,\n            msg: String,\n        },\n    SerializeErr {\n            source_type: String,\n            msg: String,\n        },\n    Underflow {\n            minuend: String,\n            subtrahend: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2293},{"krate":0,"index":2295},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303}],"decl_id":null,"docs":" Structured error type for init, handle and query.","sig":null,"attributes":[{"value":"/ Structured error type for init, handle and query.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":43661,"byte_end":43714,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":43715,"byte_end":43718,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This can be serialized and passed over the Wasm/VM boundary, which allows us to use structured","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":43719,"byte_end":43817,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ error types in e.g. integration tests. In that process backtraces are stripped off.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":43818,"byte_end":43905,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":43906,"byte_end":43909,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The prefix \"Std\" means \"the standard error within the standard library\". This is not the only","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":43910,"byte_end":44007,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ result/error type in cosmwasm-std.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44008,"byte_end":44046,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44047,"byte_end":44050,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ When new cases are added, they should describe the problem rather than what was attempted (e.g.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44051,"byte_end":44150,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ InvalidBase64 is preferred over Base64DecodingErr). In the long run this allows us to get rid of","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44151,"byte_end":44251,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ the duplication in \"StdError::FooErr\".","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44252,"byte_end":44294,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44295,"byte_end":44298,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Checklist for adding a new error:","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44299,"byte_end":44336,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/ - Add enum case","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44337,"byte_end":44356,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ - Add creator function in std_error_helpers.rs","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":44357,"byte_end":44407,"line_start":19,"line_end":19,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":46209,"byte_end":46220,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"generic_err","qualname":"<StdError>::generic_err","value":"pub fn generic_err<S: Into<String>>(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":46432,"byte_end":46446,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"invalid_base64","qualname":"<StdError>::invalid_base64","value":"pub fn invalid_base64<S: ToString>(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":46662,"byte_end":46679,"line_start":97,"line_end":97,"column_start":12,"column_end":29},"name":"invalid_data_size","qualname":"<StdError>::invalid_data_size","value":"pub fn invalid_data_size(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":47043,"byte_end":47055,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"name":"invalid_utf8","qualname":"<StdError>::invalid_utf8","value":"pub fn invalid_utf8<S: ToString>(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":47269,"byte_end":47278,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"not_found","qualname":"<StdError>::not_found","value":"pub fn not_found<S: Into<String>>(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":47491,"byte_end":47500,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"parse_err","qualname":"<StdError>::parse_err","value":"pub fn parse_err<T: Into<String>, M: ToString>(T, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":47779,"byte_end":47792,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"serialize_err","qualname":"<StdError>::serialize_err","value":"pub fn serialize_err<S: Into<String>, M: ToString>(S, M) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":48075,"byte_end":48084,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"underflow","qualname":"<StdError>::underflow","value":"pub fn underflow<U: ToString>(U, U) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":230},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":53462,"byte_end":53471,"line_start":311,"line_end":311,"column_start":10,"column_end":19},"name":"StdResult","qualname":"::errors::std_error::StdResult","value":"core::result::Result<T, StdError>","parent":null,"children":[],"decl_id":null,"docs":" The return type for init, handle and query. Since the error type cannot be serialized to JSON,\n this is only available within the contract and its unit tests.","sig":null,"attributes":[{"value":"/ The return type for init, handle and query. Since the error type cannot be serialized to JSON,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":53145,"byte_end":53243,"line_start":306,"line_end":306,"column_start":1,"column_end":99}},{"value":"/ this is only available within the contract and its unit tests.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":53244,"byte_end":53310,"line_start":307,"line_end":307,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":53311,"byte_end":53314,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ The prefix \"Std\" means \"the standard result within the standard library\". This is not the only","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":53315,"byte_end":53413,"line_start":309,"line_end":309,"column_start":1,"column_end":99}},{"value":"/ result/error type in cosmwasm-std.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":53414,"byte_end":53452,"line_start":310,"line_end":310,"column_start":1,"column_end":39}}]},{"kind":"StructVariant","id":{"krate":0,"index":2541},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60864,"byte_end":60878,"line_start":19,"line_end":19,"column_start":5,"column_end":19},"name":"InvalidRequest","qualname":"::errors::system_error::SystemError::InvalidRequest","value":"SystemError::InvalidRequest { error, request }","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2544},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60919,"byte_end":60934,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"InvalidResponse","qualname":"::errors::system_error::SystemError::InvalidResponse","value":"SystemError::InvalidResponse { error, response }","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2547},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60976,"byte_end":60990,"line_start":21,"line_end":21,"column_start":5,"column_end":19},"name":"NoSuchContract","qualname":"::errors::system_error::SystemError::NoSuchContract","value":"SystemError::NoSuchContract { addr }","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2549},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":61016,"byte_end":61023,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::errors::system_error::SystemError::Unknown","value":"SystemError::Unknown {  }","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2550},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":61032,"byte_end":61050,"line_start":23,"line_end":23,"column_start":5,"column_end":23},"name":"UnsupportedRequest","qualname":"::errors::system_error::SystemError::UnsupportedRequest","value":"SystemError::UnsupportedRequest { kind }","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2540},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60846,"byte_end":60857,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"SystemError","qualname":"::errors::system_error::SystemError","value":"pub enum SystemError {\n    InvalidRequest {\n            error: String,\n            request: Binary,\n        },\n    InvalidResponse {\n            error: String,\n            response: Binary,\n        },\n    NoSuchContract {\n            addr: HumanAddr,\n        },\n    Unknown {\n        },\n    UnsupportedRequest {\n            kind: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":2541},{"krate":0,"index":2544},{"krate":0,"index":2547},{"krate":0,"index":2549},{"krate":0,"index":2550}],"decl_id":null,"docs":" SystemError is used for errors inside the VM and is API friendly (i.e. serializable).","sig":null,"attributes":[{"value":"/ SystemError is used for errors inside the VM and is API friendly (i.e. serializable).","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60119,"byte_end":60208,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60209,"byte_end":60212,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is used on return values for Querier as a nested result: Result<StdResult<T>, SystemError>","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60213,"byte_end":60312,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ The first wrap (SystemError) will trigger if the contract address doesn't exist,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60313,"byte_end":60397,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ the QueryRequest is malformated, etc. The second wrap will be an error message from","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60398,"byte_end":60485,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ the contract itself.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60486,"byte_end":60510,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60511,"byte_end":60514,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Such errors are only created by the VM. The error type is defined in the standard library, to ensure","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60515,"byte_end":60619,"line_start":13,"line_end":13,"column_start":1,"column_end":105}},{"value":"/ the contract understands the error format without creating a dependency on cosmwasm-vm.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60620,"byte_end":60711,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60783,"byte_end":60818,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":60819,"byte_end":60836,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":270},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/iterator.rs","byte_start":62152,"byte_end":62154,"line_start":5,"line_end":5,"column_start":10,"column_end":12},"name":"KV","qualname":"::iterator::KV","value":"(Vec<u8>, T)","parent":null,"children":[],"decl_id":null,"docs":" KV is a Key-Value pair, returned from our iterators\n","sig":null,"attributes":[{"value":"/ KV is a Key-Value pair, returned from our iterators","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/iterator.rs","byte_start":62087,"byte_end":62142,"line_start":4,"line_end":4,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2553},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/iterator.rs","byte_start":62322,"byte_end":62331,"line_start":10,"line_end":10,"column_start":5,"column_end":14},"name":"Ascending","qualname":"::iterator::Order::Ascending","value":"Order::Ascending","parent":{"krate":0,"index":2552},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2556},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/iterator.rs","byte_start":62341,"byte_end":62351,"line_start":11,"line_end":11,"column_start":5,"column_end":15},"name":"Descending","qualname":"::iterator::Order::Descending","value":"Order::Descending","parent":{"krate":0,"index":2552},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2552},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/iterator.rs","byte_start":62310,"byte_end":62315,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Order","qualname":"::iterator::Order","value":"pub enum Order { Ascending = , Descending = , }","parent":null,"children":[{"krate":0,"index":2553},{"krate":0,"index":2556}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2562},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63338,"byte_end":63345,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"Decimal","qualname":"::math::Decimal","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0","sig":null,"attributes":[{"value":"/ A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63003,"byte_end":63108,"line_start":11,"line_end":11,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63109,"byte_end":63112,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63113,"byte_end":63243,"line_start":13,"line_end":13,"column_start":1,"column_end":131}}]},{"kind":"Const","id":{"krate":0,"index":329},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63473,"byte_end":63476,"line_start":20,"line_end":20,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::Decimal::MAX","value":"Decimal","parent":{"krate":0,"index":328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63555,"byte_end":63558,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"one","qualname":"<Decimal>::one","value":"pub const fn one() -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Create a 1.0 Decimal\n","sig":null,"attributes":[{"value":"/ Create a 1.0 Decimal","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63513,"byte_end":63537,"line_start":22,"line_end":22,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63663,"byte_end":63667,"line_start":28,"line_end":28,"column_start":18,"column_end":22},"name":"zero","qualname":"<Decimal>::zero","value":"pub const fn zero() -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Create a 0.0 Decimal\n","sig":null,"attributes":[{"value":"/ Create a 0.0 Decimal","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63621,"byte_end":63645,"line_start":27,"line_end":27,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63752,"byte_end":63759,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"percent","qualname":"<Decimal>::percent","value":"pub fn percent(u64) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Convert x% into Decimal\n","sig":null,"attributes":[{"value":"/ Convert x% into Decimal","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63713,"byte_end":63740,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63900,"byte_end":63908,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"permille","qualname":"<Decimal>::permille","value":"pub fn permille(u64) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Convert permille (x/1000) into Decimal\n","sig":null,"attributes":[{"value":"/ Convert permille (x/1000) into Decimal","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63846,"byte_end":63888,"line_start":37,"line_end":37,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":64066,"byte_end":64076,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"from_ratio","qualname":"<Decimal>::from_ratio","value":"pub fn from_ratio<A: Into<u128>, B: Into<u128>>(A, B) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (nominator / denominator) as a Decimal\n","sig":null,"attributes":[{"value":"/ Returns the ratio (nominator / denominator) as a Decimal","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63994,"byte_end":64054,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":64486,"byte_end":64493,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Decimal>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2586},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68431,"byte_end":68438,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"Uint128","qualname":"::math::Uint128","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2609},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68468,"byte_end":68476,"line_start":174,"line_end":174,"column_start":49,"column_end":57},"name":"0","qualname":"::math::Uint128::0","value":"u128","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"schemars(with = \"String\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68439,"byte_end":68467,"line_start":174,"line_end":174,"column_start":20,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68541,"byte_end":68545,"line_start":178,"line_end":178,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint128>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint128(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint128(0)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68499,"byte_end":68523,"line_start":177,"line_end":177,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68639,"byte_end":68643,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"u128","qualname":"<Uint128>::u128","value":"pub fn u128(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the internal data\n","sig":null,"attributes":[{"value":"/ Returns a copy of the internal data","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68588,"byte_end":68627,"line_start":182,"line_end":182,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68694,"byte_end":68701,"line_start":187,"line_end":187,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint128>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":71409,"byte_end":71423,"line_start":306,"line_end":306,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint128>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<u128>, B: Into<u128>>(&Self, A, B) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" returns self * nom / denom\n","sig":null,"attributes":[{"value":"/ returns self * nom / denom","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":71367,"byte_end":71397,"line_start":305,"line_end":305,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2681},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89536,"byte_end":89540,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Bank","qualname":"::query::QueryRequest::Bank","value":"QueryRequest::Bank(BankQuery)","parent":{"krate":0,"index":2679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2684},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89557,"byte_end":89563,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Custom","qualname":"::query::QueryRequest::Custom","value":"QueryRequest::Custom(C)","parent":{"krate":0,"index":2679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2687},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89572,"byte_end":89579,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"Staking","qualname":"::query::QueryRequest::Staking","value":"QueryRequest::Staking(StakingQuery)","parent":{"krate":0,"index":2679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2690},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89599,"byte_end":89603,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::query::QueryRequest::Wasm","value":"QueryRequest::Wasm(WasmQuery)","parent":{"krate":0,"index":2679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2679},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89501,"byte_end":89513,"line_start":12,"line_end":12,"column_start":10,"column_end":22},"name":"QueryRequest","qualname":"::query::QueryRequest","value":"pub enum QueryRequest<C: CustomQuery> {\n    Bank(BankQuery),\n    Custom(C),\n    Staking(StakingQuery),\n    Wasm(WasmQuery),\n}","parent":null,"children":[{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2687},{"krate":0,"index":2690}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89456,"byte_end":89491,"line_start":11,"line_end":11,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":2820},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89859,"byte_end":89866,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"Balance","qualname":"::query::BankQuery::Balance","value":"BankQuery::Balance { address, denom }","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" This calls into the native bank module for one denomination\n Return value is BalanceResponse\n","sig":null,"attributes":[{"value":"/ This calls into the native bank module for one denomination","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89751,"byte_end":89814,"line_start":22,"line_end":22,"column_start":5,"column_end":68}},{"value":"/ Return value is BalanceResponse","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89819,"byte_end":89854,"line_start":23,"line_end":23,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":2823},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90122,"byte_end":90133,"line_start":28,"line_end":28,"column_start":5,"column_end":16},"name":"AllBalances","qualname":"::query::BankQuery::AllBalances","value":"BankQuery::AllBalances { address }","parent":{"krate":0,"index":2819},"children":[],"decl_id":null,"docs":" This calls into the native bank module for all denominations.\n Note that this may be much more expensive than Balance and should be avoided if possible.\n Return value is AllBalanceResponse.\n","sig":null,"attributes":[{"value":"/ This calls into the native bank module for all denominations.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89910,"byte_end":89975,"line_start":25,"line_end":25,"column_start":5,"column_end":70}},{"value":"/ Note that this may be much more expensive than Balance and should be avoided if possible.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89980,"byte_end":90073,"line_start":26,"line_end":26,"column_start":5,"column_end":98}},{"value":"/ Return value is AllBalanceResponse.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90078,"byte_end":90117,"line_start":27,"line_end":27,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":2819},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89735,"byte_end":89744,"line_start":21,"line_end":21,"column_start":10,"column_end":19},"name":"BankQuery","qualname":"::query::BankQuery","value":"pub enum BankQuery {\n    Balance {\n            address: HumanAddr,\n            denom: String,\n        },\n    AllBalances {\n            address: HumanAddr,\n        },\n}","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":2823}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":89690,"byte_end":89725,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":464},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90761,"byte_end":90772,"line_start":50,"line_end":50,"column_start":11,"column_end":22},"name":"CustomQuery","qualname":"::query::CustomQuery","value":"CustomQuery: Serialize","parent":null,"children":[],"decl_id":null,"docs":" A trait that is required to avoid conflicts with other query types like BankQuery and WasmQuery\n in generic implementations.\n You need to implement it in your custom query type.","sig":null,"attributes":[{"value":"/ A trait that is required to avoid conflicts with other query types like BankQuery and WasmQuery","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90161,"byte_end":90260,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"/ in generic implementations.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90261,"byte_end":90292,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/ You need to implement it in your custom query type.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90293,"byte_end":90348,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90349,"byte_end":90352,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90353,"byte_end":90367,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90368,"byte_end":90371,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90372,"byte_end":90379,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::CustomQuery;","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90380,"byte_end":90416,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ # use schemars::JsonSchema;","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90417,"byte_end":90448,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90449,"byte_end":90491,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/ #[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90492,"byte_end":90566,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ #[serde(rename_all = \"snake_case\")]","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90567,"byte_end":90606,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ pub enum MyCustomQuery {","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90607,"byte_end":90635,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/     Ping {},","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90636,"byte_end":90652,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"/     Capitalized { text: String },","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90653,"byte_end":90690,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90691,"byte_end":90696,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90697,"byte_end":90700,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ impl CustomQuery for MyCustomQuery {}","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90701,"byte_end":90742,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90743,"byte_end":90750,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"StructVariant","id":{"krate":0,"index":2954},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":91118,"byte_end":91123,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"name":"Smart","qualname":"::query::WasmQuery::Smart","value":"WasmQuery::Smart { contract_addr, msg }","parent":{"krate":0,"index":2953},"children":[],"decl_id":null,"docs":" this queries the public API of another contract at a known address (with known ABI)\n return value is whatever the contract returns (caller should know)\n","sig":null,"attributes":[{"value":"/ this queries the public API of another contract at a known address (with known ABI)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90951,"byte_end":91038,"line_start":57,"line_end":57,"column_start":5,"column_end":92}},{"value":"/ return value is whatever the contract returns (caller should know)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":91043,"byte_end":91113,"line_start":58,"line_end":58,"column_start":5,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":2957},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":91402,"byte_end":91405,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"name":"Raw","qualname":"::query::WasmQuery::Raw","value":"WasmQuery::Raw { contract_addr, key }","parent":{"krate":0,"index":2953},"children":[],"decl_id":null,"docs":" this queries the raw kv-store of the contract.\n returns the raw, unparsed data stored at that key, which may be an empty vector if not present\n","sig":null,"attributes":[{"value":"/ this queries the raw kv-store of the contract.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":91244,"byte_end":91294,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ returns the raw, unparsed data stored at that key, which may be an empty vector if not present","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":91299,"byte_end":91397,"line_start":65,"line_end":65,"column_start":5,"column_end":103}}]},{"kind":"Enum","id":{"krate":0,"index":2953},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90935,"byte_end":90944,"line_start":56,"line_end":56,"column_start":10,"column_end":19},"name":"WasmQuery","qualname":"::query::WasmQuery","value":"pub enum WasmQuery {\n    Smart {\n            contract_addr: HumanAddr,\n            msg: Binary,\n        },\n    Raw {\n            contract_addr: HumanAddr,\n            key: Binary,\n        },\n}","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2957}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90890,"byte_end":90925,"line_start":55,"line_end":55,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3018},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92227,"byte_end":92242,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"BalanceResponse","qualname":"::query::BalanceResponse","value":"BalanceResponse { amount }","parent":null,"children":[{"krate":0,"index":3019}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92180,"byte_end":92215,"line_start":99,"line_end":99,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3019},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92359,"byte_end":92365,"line_start":103,"line_end":103,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::BalanceResponse::amount","value":"coins::Coin","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":" Always returns a Coin with the requested denom.\n This may be of 0 amount if no such funds.\n","sig":null,"attributes":[{"value":"/ Always returns a Coin with the requested denom.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92249,"byte_end":92300,"line_start":101,"line_end":101,"column_start":5,"column_end":56}},{"value":"/ This may be of 0 amount if no such funds.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92305,"byte_end":92350,"line_start":102,"line_end":102,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3078},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92494,"byte_end":92512,"line_start":108,"line_end":108,"column_start":12,"column_end":30},"name":"AllBalanceResponse","qualname":"::query::AllBalanceResponse","value":"AllBalanceResponse { amount }","parent":null,"children":[{"krate":0,"index":3079}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92447,"byte_end":92482,"line_start":107,"line_end":107,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3079},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92580,"byte_end":92586,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::AllBalanceResponse::amount","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":3078},"children":[],"decl_id":null,"docs":" Returns all non-zero coins held by this account.\n","sig":null,"attributes":[{"value":"/ Returns all non-zero coins held by this account.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92519,"byte_end":92571,"line_start":109,"line_end":109,"column_start":5,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":3275},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92840,"byte_end":92851,"line_start":117,"line_end":117,"column_start":5,"column_end":16},"name":"BondedDenom","qualname":"::query::StakingQuery::BondedDenom","value":"StakingQuery::BondedDenom {  }","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Returns the denomination that can be bonded (if there are multiple native tokens on the chain)\n","sig":null,"attributes":[{"value":"/ Returns the denomination that can be bonded (if there are multiple native tokens on the chain)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92737,"byte_end":92835,"line_start":116,"line_end":116,"column_start":5,"column_end":103}}]},{"kind":"StructVariant","id":{"krate":0,"index":3276},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92928,"byte_end":92942,"line_start":119,"line_end":119,"column_start":5,"column_end":19},"name":"AllDelegations","qualname":"::query::StakingQuery::AllDelegations","value":"StakingQuery::AllDelegations { delegator }","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" AllDelegations will return all delegations by the delegator\n","sig":null,"attributes":[{"value":"/ AllDelegations will return all delegations by the delegator","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92860,"byte_end":92923,"line_start":118,"line_end":118,"column_start":5,"column_end":68}}]},{"kind":"StructVariant","id":{"krate":0,"index":3278},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93095,"byte_end":93105,"line_start":122,"line_end":122,"column_start":5,"column_end":15},"name":"Delegation","qualname":"::query::StakingQuery::Delegation","value":"StakingQuery::Delegation { delegator, validator }","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Delegation will return more detailed info on a particular\n delegation, defined by delegator/validator pair\n","sig":null,"attributes":[{"value":"/ Delegation will return more detailed info on a particular","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92973,"byte_end":93034,"line_start":120,"line_end":120,"column_start":5,"column_end":66}},{"value":"/ delegation, defined by delegator/validator pair","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93039,"byte_end":93090,"line_start":121,"line_end":121,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":3281},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93235,"byte_end":93245,"line_start":127,"line_end":127,"column_start":5,"column_end":15},"name":"Validators","qualname":"::query::StakingQuery::Validators","value":"StakingQuery::Validators {  }","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Returns all registered Validators on the system\n","sig":null,"attributes":[{"value":"/ Returns all registered Validators on the system","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93179,"byte_end":93230,"line_start":126,"line_end":126,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":3274},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92718,"byte_end":92730,"line_start":115,"line_end":115,"column_start":10,"column_end":22},"name":"StakingQuery","qualname":"::query::StakingQuery","value":"pub enum StakingQuery {\n    BondedDenom {\n        },\n    AllDelegations {\n            delegator: HumanAddr,\n        },\n    Delegation {\n            delegator: HumanAddr,\n            validator: HumanAddr,\n        },\n    Validators {\n        },\n}","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3281}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92673,"byte_end":92708,"line_start":114,"line_end":114,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3340},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93458,"byte_end":93477,"line_start":133,"line_end":133,"column_start":12,"column_end":31},"name":"BondedDenomResponse","qualname":"::query::BondedDenomResponse","value":"BondedDenomResponse { denom }","parent":null,"children":[{"krate":0,"index":3341}],"decl_id":null,"docs":" BondedDenomResponse is data format returned from StakingRequest::BondedDenom query\n","sig":null,"attributes":[{"value":"/ BondedDenomResponse is data format returned from StakingRequest::BondedDenom query","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93253,"byte_end":93339,"line_start":130,"line_end":130,"column_start":1,"column_end":87}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93411,"byte_end":93446,"line_start":132,"line_end":132,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3341},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93488,"byte_end":93493,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"denom","qualname":"::query::BondedDenomResponse::denom","value":"std::string::String","parent":{"krate":0,"index":3340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3400},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93714,"byte_end":93736,"line_start":140,"line_end":140,"column_start":12,"column_end":34},"name":"AllDelegationsResponse","qualname":"::query::AllDelegationsResponse","value":"AllDelegationsResponse { delegations }","parent":null,"children":[{"krate":0,"index":3401}],"decl_id":null,"docs":" DelegationsResponse is data format returned from StakingRequest::AllDelegations query\n","sig":null,"attributes":[{"value":"/ DelegationsResponse is data format returned from StakingRequest::AllDelegations query","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93506,"byte_end":93595,"line_start":137,"line_end":137,"column_start":1,"column_end":90}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93667,"byte_end":93702,"line_start":139,"line_end":139,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3401},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93747,"byte_end":93758,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"delegations","qualname":"::query::AllDelegationsResponse::delegations","value":"std::vec::Vec<query::Delegation>","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3402},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93927,"byte_end":93937,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"Delegation","qualname":"::query::Delegation","value":"Delegation { delegator, validator, amount }","parent":null,"children":[{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405}],"decl_id":null,"docs":" Delegation is basic (cheap to query) data about a delegation\n","sig":null,"attributes":[{"value":"/ Delegation is basic (cheap to query) data about a delegation","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93780,"byte_end":93844,"line_start":144,"line_end":144,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3403},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93948,"byte_end":93957,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"delegator","qualname":"::query::Delegation::delegator","value":"addresses::HumanAddr","parent":{"krate":0,"index":3402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3404},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":93978,"byte_end":93987,"line_start":148,"line_end":148,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::Delegation::validator","value":"addresses::HumanAddr","parent":{"krate":0,"index":3402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3405},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94058,"byte_end":94064,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::Delegation::amount","value":"coins::Coin","parent":{"krate":0,"index":3402},"children":[],"decl_id":null,"docs":" How much we have locked in the delegation\n","sig":null,"attributes":[{"value":"/ How much we have locked in the delegation","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94004,"byte_end":94049,"line_start":149,"line_end":149,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3528},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94796,"byte_end":94810,"line_start":173,"line_end":173,"column_start":12,"column_end":26},"name":"FullDelegation","qualname":"::query::FullDelegation","value":"FullDelegation { delegator, validator, amount, can_redelegate, accumulated_rewards }","parent":null,"children":[{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3533}],"decl_id":null,"docs":" FullDelegation is all the info on the delegation, some (like accumulated_reward and can_redelegate)\n is expensive to query\n","sig":null,"attributes":[{"value":"/ FullDelegation is all the info on the delegation, some (like accumulated_reward and can_redelegate)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94584,"byte_end":94687,"line_start":170,"line_end":170,"column_start":1,"column_end":104}},{"value":"/ is expensive to query","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94688,"byte_end":94713,"line_start":171,"line_end":171,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3529},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94821,"byte_end":94830,"line_start":174,"line_end":174,"column_start":9,"column_end":18},"name":"delegator","qualname":"::query::FullDelegation::delegator","value":"addresses::HumanAddr","parent":{"krate":0,"index":3528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3530},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94851,"byte_end":94860,"line_start":175,"line_end":175,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::FullDelegation::validator","value":"addresses::HumanAddr","parent":{"krate":0,"index":3528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3531},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94931,"byte_end":94937,"line_start":177,"line_end":177,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::FullDelegation::amount","value":"coins::Coin","parent":{"krate":0,"index":3528},"children":[],"decl_id":null,"docs":" How much we have locked in the delegation\n","sig":null,"attributes":[{"value":"/ How much we have locked in the delegation","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94877,"byte_end":94922,"line_start":176,"line_end":176,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3532},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95152,"byte_end":95166,"line_start":181,"line_end":181,"column_start":9,"column_end":23},"name":"can_redelegate","qualname":"::query::FullDelegation::can_redelegate","value":"coins::Coin","parent":{"krate":0,"index":3528},"children":[],"decl_id":null,"docs":" can_redelegate captures how much can be immediately redelegated.\n 0 is no redelegation and can_redelegate == amount is redelegate all\n but there are many places between the two\n","sig":null,"attributes":[{"value":"/ can_redelegate captures how much can be immediately redelegated.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94949,"byte_end":95017,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ 0 is no redelegation and can_redelegate == amount is redelegate all","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95022,"byte_end":95093,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/ but there are many places between the two","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95098,"byte_end":95143,"line_start":180,"line_end":180,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3533},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95225,"byte_end":95244,"line_start":183,"line_end":183,"column_start":9,"column_end":28},"name":"accumulated_rewards","qualname":"::query::FullDelegation::accumulated_rewards","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":3528},"children":[],"decl_id":null,"docs":" How much we can currently withdraw\n","sig":null,"attributes":[{"value":"/ How much we can currently withdraw","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95178,"byte_end":95216,"line_start":182,"line_end":182,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3600},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95427,"byte_end":95445,"line_start":188,"line_end":188,"column_start":12,"column_end":30},"name":"ValidatorsResponse","qualname":"::query::ValidatorsResponse","value":"ValidatorsResponse { validators }","parent":null,"children":[{"krate":0,"index":3601}],"decl_id":null,"docs":" ValidatorsResponse is data format returned from StakingRequest::Validators query\n","sig":null,"attributes":[{"value":"/ ValidatorsResponse is data format returned from StakingRequest::Validators query","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95260,"byte_end":95344,"line_start":186,"line_end":186,"column_start":1,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":3601},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95456,"byte_end":95466,"line_start":189,"line_end":189,"column_start":9,"column_end":19},"name":"validators","qualname":"::query::ValidatorsResponse::validators","value":"std::vec::Vec<query::Validator>","parent":{"krate":0,"index":3600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3660},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95569,"byte_end":95578,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"Validator","qualname":"::query::Validator","value":"Validator { address, commission, max_commission, max_change_rate }","parent":null,"children":[{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3664}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3661},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95589,"byte_end":95596,"line_start":194,"line_end":194,"column_start":9,"column_end":16},"name":"address","qualname":"::query::Validator::address","value":"addresses::HumanAddr","parent":{"krate":0,"index":3660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3662},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95617,"byte_end":95627,"line_start":195,"line_end":195,"column_start":9,"column_end":19},"name":"commission","qualname":"::query::Validator::commission","value":"math::Decimal","parent":{"krate":0,"index":3660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3663},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95646,"byte_end":95660,"line_start":196,"line_end":196,"column_start":9,"column_end":23},"name":"max_commission","qualname":"::query::Validator::max_commission","value":"math::Decimal","parent":{"krate":0,"index":3660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3664},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95734,"byte_end":95749,"line_start":198,"line_end":198,"column_start":9,"column_end":24},"name":"max_change_rate","qualname":"::query::Validator::max_change_rate","value":"math::Decimal","parent":{"krate":0,"index":3660},"children":[],"decl_id":null,"docs":" TODO: what units are these (in terms of time)?\n","sig":null,"attributes":[{"value":"/ TODO: what units are these (in terms of time)?","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":95675,"byte_end":95725,"line_start":197,"line_end":197,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3729},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/attribute.rs","byte_start":96707,"byte_end":96716,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::results::attribute::Attribute","value":"Attribute { key, value }","parent":null,"children":[{"krate":0,"index":3730},{"krate":0,"index":3731}],"decl_id":null,"docs":" An key value pair that is used in the context of event attributes in logs\n","sig":null,"attributes":[{"value":"/ An key value pair that is used in the context of event attributes in logs","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/attribute.rs","byte_start":96538,"byte_end":96615,"line_start":4,"line_end":4,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":3730},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/attribute.rs","byte_start":96727,"byte_end":96730,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"key","qualname":"::results::attribute::Attribute::key","value":"std::string::String","parent":{"krate":0,"index":3729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3731},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/attribute.rs","byte_start":96748,"byte_end":96753,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"name":"value","qualname":"::results::attribute::Attribute::value","value":"std::string::String","parent":{"krate":0,"index":3729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":489},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/attribute.rs","byte_start":96802,"byte_end":96806,"line_start":12,"line_end":12,"column_start":8,"column_end":12},"name":"attr","qualname":"::results::attribute::attr","value":"pub fn attr<K: ToString, V: ToString>(K, V) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Attribute.\n","sig":null,"attributes":[{"value":"/ Creates a new Attribute.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/attribute.rs","byte_start":96766,"byte_end":96794,"line_start":11,"line_end":11,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3794},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":97965,"byte_end":97972,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Context","qualname":"::results::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":98539,"byte_end":98542,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Context<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":98600,"byte_end":98613,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<Context<T>>::add_attribute","value":"pub fn add_attribute<K: ToString, V: ToString>(&mut Self, K, V)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":98737,"byte_end":98748,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"add_message","qualname":"<Context<T>>::add_message","value":"pub fn add_message<U: Into<CosmosMsg<T>>>(&mut Self, U)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":98851,"byte_end":98859,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"set_data","qualname":"<Context<T>>::set_data","value":"pub fn set_data<U: Into<Binary>>(&mut Self, U)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3878},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104187,"byte_end":104189,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::contract_result::ContractResult::Ok","value":"ContractResult::Ok(S)","parent":{"krate":0,"index":3876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3881},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104407,"byte_end":104410,"line_start":39,"line_end":39,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::contract_result::ContractResult::Err","value":"ContractResult::Err(String)","parent":{"krate":0,"index":3876},"children":[],"decl_id":null,"docs":" An error type that every custom error created by contract developers can be converted to.\n This could potientially have more structure, but String is the easiest.\n","sig":null,"attributes":[{"value":"/ An error type that every custom error created by contract developers can be converted to.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104198,"byte_end":104291,"line_start":36,"line_end":36,"column_start":5,"column_end":98}},{"value":"/ This could potientially have more structure, but String is the easiest.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104296,"byte_end":104371,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"serde(rename = \"error\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104376,"byte_end":104402,"line_start":38,"line_end":38,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":3876},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104163,"byte_end":104177,"line_start":34,"line_end":34,"column_start":10,"column_end":24},"name":"ContractResult","qualname":"::results::contract_result::ContractResult","value":"pub enum ContractResult<S> { Ok(S), Err(String), }","parent":null,"children":[{"krate":0,"index":3878},{"krate":0,"index":3881}],"decl_id":null,"docs":" This is the final result type that is created and serialized in a contract for\n every init/handle/migrate call. The VM then deserializes this type to distinguish\n between successful and failed executions.","sig":null,"attributes":[{"value":"/ This is the final result type that is created and serialized in a contract for","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":102864,"byte_end":102946,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ every init/handle/migrate call. The VM then deserializes this type to distinguish","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":102947,"byte_end":103032,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/ between successful and failed executions.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103033,"byte_end":103078,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103079,"byte_end":103082,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103083,"byte_end":103167,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103168,"byte_end":103255,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103256,"byte_end":103341,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103342,"byte_end":103345,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103346,"byte_end":103360,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103361,"byte_end":103364,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103365,"byte_end":103377,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103378,"byte_end":103381,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103382,"byte_end":103389,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, ContractResult, HandleResponse};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103390,"byte_end":103455,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ let response: HandleResponse = HandleResponse::default();","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103456,"byte_end":103517,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ let result: ContractResult<HandleResponse> = ContractResult::Ok(response);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103518,"byte_end":103596,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"messages\":[],\"attributes\":[],\"data\":null}}\"#.to_vec());","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103597,"byte_end":103705,"line_start":21,"line_end":21,"column_start":1,"column_end":109}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103706,"byte_end":103713,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103714,"byte_end":103717,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103718,"byte_end":103730,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103731,"byte_end":103734,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103735,"byte_end":103742,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, ContractResult, HandleResponse};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103743,"byte_end":103808,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ let error_msg = String::from(\"Something went wrong\");","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103809,"byte_end":103866,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ let result: ContractResult<HandleResponse> = ContractResult::Err(error_msg);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103867,"byte_end":103947,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":\"Something went wrong\"}\"#.to_vec());","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":103948,"byte_end":104038,"line_start":30,"line_end":30,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104039,"byte_end":104046,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104118,"byte_end":104153,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104712,"byte_end":104723,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"into_result","qualname":"<ContractResult<S>>::into_result","value":"pub fn into_result(Self) -> Result<S, String>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `ContractResult<S>` to a `Result<S, String>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `ContractResult<S>` to a `Result<S, String>` as a convenient way","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104582,"byte_end":104661,"line_start":45,"line_end":45,"column_start":5,"column_end":84}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104666,"byte_end":104700,"line_start":46,"line_end":46,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104811,"byte_end":104817,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ContractResult<S>>::unwrap","value":"pub fn unwrap(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104927,"byte_end":104937,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<ContractResult<S>>::unwrap_err","value":"pub fn unwrap_err(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3955},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":109658,"byte_end":109662,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Bank","qualname":"::results::cosmos_msg::CosmosMsg::Bank","value":"CosmosMsg::Bank(BankMsg)","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3958},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":109809,"byte_end":109815,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Custom","qualname":"::results::cosmos_msg::CosmosMsg::Custom","value":"CosmosMsg::Custom(T)","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3961},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":109824,"byte_end":109831,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Staking","qualname":"::results::cosmos_msg::CosmosMsg::Staking","value":"CosmosMsg::Staking(StakingMsg)","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3964},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":109849,"byte_end":109853,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::results::cosmos_msg::CosmosMsg::Wasm","value":"CosmosMsg::Wasm(WasmMsg)","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3953},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":109573,"byte_end":109582,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"CosmosMsg","qualname":"::results::cosmos_msg::CosmosMsg","value":"pub enum CosmosMsg<T = Empty> where T: Clone + fmt::Debug + PartialEq +\n    JsonSchema {\n    Bank(BankMsg),\n    Custom(T),\n    Staking(StakingMsg),\n    Wasm(WasmMsg),\n}","parent":null,"children":[{"krate":0,"index":3955},{"krate":0,"index":3958},{"krate":0,"index":3961},{"krate":0,"index":3964}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":109426,"byte_end":109461,"line_start":11,"line_end":11,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":4060},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":110044,"byte_end":110048,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Send","qualname":"::results::cosmos_msg::BankMsg::Send","value":"BankMsg::Send { from_address, to_address, amount }","parent":{"krate":0,"index":4059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4059},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":109983,"byte_end":109990,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"BankMsg","qualname":"::results::cosmos_msg::BankMsg","value":"pub enum BankMsg {\n    Send {\n            from_address: HumanAddr,\n            to_address: HumanAddr,\n            amount: Vec<Coin>,\n        },\n}","parent":null,"children":[{"krate":0,"index":4060}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":109938,"byte_end":109973,"line_start":26,"line_end":26,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":4271},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":110285,"byte_end":110293,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"Delegate","qualname":"::results::cosmos_msg::StakingMsg::Delegate","value":"StakingMsg::Delegate { validator, amount }","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4274},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":110436,"byte_end":110446,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"Undelegate","qualname":"::results::cosmos_msg::StakingMsg::Undelegate","value":"StakingMsg::Undelegate { validator, amount }","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4277},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":110589,"byte_end":110597,"line_start":49,"line_end":49,"column_start":5,"column_end":13},"name":"Withdraw","qualname":"::results::cosmos_msg::StakingMsg::Withdraw","value":"StakingMsg::Withdraw { validator, recipient }","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4280},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":110888,"byte_end":110898,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"Redelegate","qualname":"::results::cosmos_msg::StakingMsg::Redelegate","value":"StakingMsg::Redelegate { src_validator, dst_validator, amount }","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4270},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":110268,"byte_end":110278,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"name":"StakingMsg","qualname":"::results::cosmos_msg::StakingMsg","value":"pub enum StakingMsg {\n    Delegate {\n            validator: HumanAddr,\n            amount: Coin,\n        },\n    Undelegate {\n            validator: HumanAddr,\n            amount: Coin,\n        },\n    Withdraw {\n            validator: HumanAddr,\n            recipient: Option<HumanAddr>,\n        },\n    Redelegate {\n            src_validator: HumanAddr,\n            dst_validator: HumanAddr,\n            amount: Coin,\n        },\n}","parent":null,"children":[{"krate":0,"index":4271},{"krate":0,"index":4274},{"krate":0,"index":4277},{"krate":0,"index":4280}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":110223,"byte_end":110258,"line_start":37,"line_end":37,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":4419},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":111295,"byte_end":111302,"line_start":68,"line_end":68,"column_start":5,"column_end":12},"name":"Execute","qualname":"::results::cosmos_msg::WasmMsg::Execute","value":"WasmMsg::Execute { contract_addr, msg, send }","parent":{"krate":0,"index":4418},"children":[],"decl_id":null,"docs":" this dispatches a call to another contract at a known address (with known ABI)\n","sig":null,"attributes":[{"value":"/ this dispatches a call to another contract at a known address (with known ABI)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":111208,"byte_end":111290,"line_start":67,"line_end":67,"column_start":5,"column_end":87}}]},{"kind":"StructVariant","id":{"krate":0,"index":4423},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":111542,"byte_end":111553,"line_start":75,"line_end":75,"column_start":5,"column_end":16},"name":"Instantiate","qualname":"::results::cosmos_msg::WasmMsg::Instantiate","value":"WasmMsg::Instantiate { code_id, msg, send, label }","parent":{"krate":0,"index":4418},"children":[],"decl_id":null,"docs":" this instantiates a new contracts from previously uploaded wasm code\n","sig":null,"attributes":[{"value":"/ this instantiates a new contracts from previously uploaded wasm code","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":111465,"byte_end":111537,"line_start":74,"line_end":74,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":4418},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":111194,"byte_end":111201,"line_start":66,"line_end":66,"column_start":10,"column_end":17},"name":"WasmMsg","qualname":"::results::cosmos_msg::WasmMsg","value":"pub enum WasmMsg {\n    Execute {\n            contract_addr: HumanAddr,\n            msg: Binary,\n            send: Vec<Coin>,\n        },\n    Instantiate {\n            code_id: u64,\n            msg: Binary,\n            send: Vec<Coin>,\n            label: Option<String>,\n        },\n}","parent":null,"children":[{"krate":0,"index":4419},{"krate":0,"index":4423}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":111149,"byte_end":111184,"line_start":65,"line_end":65,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4428},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/handle.rs","byte_start":113189,"byte_end":113203,"line_start":13,"line_end":13,"column_start":12,"column_end":26},"name":"HandleResponse","qualname":"::results::handle::HandleResponse","value":"HandleResponse { messages, attributes, data }","parent":null,"children":[{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4432}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4430},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/handle.rs","byte_start":113283,"byte_end":113291,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"name":"messages","qualname":"::results::handle::HandleResponse::messages","value":"std::vec::Vec<results::cosmos_msg::CosmosMsg<T>>","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4431},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/handle.rs","byte_start":113390,"byte_end":113400,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::handle::HandleResponse::attributes","value":"std::vec::Vec<results::attribute::Attribute>","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a \"wasm\" event\n","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a \"wasm\" event","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/handle.rs","byte_start":113316,"byte_end":113381,"line_start":18,"line_end":18,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":4432},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/handle.rs","byte_start":113426,"byte_end":113430,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"data","qualname":"::results::handle::HandleResponse::data","value":"std::option::Option<binary::Binary>","parent":{"krate":0,"index":4428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":645},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/handle.rs","byte_start":114039,"byte_end":114051,"line_start":41,"line_end":41,"column_start":10,"column_end":22},"name":"HandleResult","qualname":"::results::handle::HandleResult","value":"Result<HandleResponse<U>, StdError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.12.1\", note =\n\"HandleResult is deprecated because it uses StdError, which should be replaced with custom errors in CosmWasm 0.11+. \\\n            Replace this with Result<HandleResponse, StdError> or Result<HandleResponse<U>, StdError> and consider migrating to custom errors from there.\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/handle.rs","byte_start":113706,"byte_end":114029,"line_start":36,"line_end":40,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":4504},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/init.rs","byte_start":114386,"byte_end":114398,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"InitResponse","qualname":"::results::init::InitResponse","value":"InitResponse { messages, attributes }","parent":null,"children":[{"krate":0,"index":4506},{"krate":0,"index":4507}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4506},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/init.rs","byte_start":114478,"byte_end":114486,"line_start":16,"line_end":16,"column_start":9,"column_end":17},"name":"messages","qualname":"::results::init::InitResponse::messages","value":"std::vec::Vec<results::cosmos_msg::CosmosMsg<T>>","parent":{"krate":0,"index":4504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4507},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/init.rs","byte_start":114585,"byte_end":114595,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::init::InitResponse::attributes","value":"std::vec::Vec<results::attribute::Attribute>","parent":{"krate":0,"index":4504},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a \"wasm\" event\n","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a \"wasm\" event","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/init.rs","byte_start":114511,"byte_end":114576,"line_start":17,"line_end":17,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":676},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/init.rs","byte_start":115170,"byte_end":115180,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"name":"InitResult","qualname":"::results::init::InitResult","value":"Result<InitResponse<U>, StdError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.12.1\", note =\n\"InitResult is deprecated because it uses StdError, which should be replaced with custom errors in CosmWasm 0.11+. \\\n            Replace this with Result<InitResponse, StdError> or Result<InitResponse<U>, StdError> and consider migrating to custom errors from there.\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/init.rs","byte_start":114843,"byte_end":115160,"line_start":33,"line_end":37,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":4577},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/migrate.rs","byte_start":116417,"byte_end":116432,"line_start":13,"line_end":13,"column_start":12,"column_end":27},"name":"MigrateResponse","qualname":"::results::migrate::MigrateResponse","value":"MigrateResponse { messages, attributes, data }","parent":null,"children":[{"krate":0,"index":4579},{"krate":0,"index":4580},{"krate":0,"index":4581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4579},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/migrate.rs","byte_start":116512,"byte_end":116520,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"name":"messages","qualname":"::results::migrate::MigrateResponse::messages","value":"std::vec::Vec<results::cosmos_msg::CosmosMsg<T>>","parent":{"krate":0,"index":4577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4580},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/migrate.rs","byte_start":116619,"byte_end":116629,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::migrate::MigrateResponse::attributes","value":"std::vec::Vec<results::attribute::Attribute>","parent":{"krate":0,"index":4577},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a \"wasm\" event\n","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a \"wasm\" event","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/migrate.rs","byte_start":116545,"byte_end":116610,"line_start":18,"line_end":18,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":4581},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/migrate.rs","byte_start":116655,"byte_end":116659,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"data","qualname":"::results::migrate::MigrateResponse::data","value":"std::option::Option<binary::Binary>","parent":{"krate":0,"index":4577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":710},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/migrate.rs","byte_start":117273,"byte_end":117286,"line_start":41,"line_end":41,"column_start":10,"column_end":23},"name":"MigrateResult","qualname":"::results::migrate::MigrateResult","value":"Result<MigrateResponse<U>, StdError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.12.1\", note =\n\"MigrateResult is deprecated because it uses StdError, which should be replaced with custom errors in CosmWasm 0.11+. \\\n            Replace this with Result<MigrateResponse, StdError> or Result<MigrateResponse<U>, StdError> and consider migrating to custom errors from there.\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/migrate.rs","byte_start":116937,"byte_end":117263,"line_start":36,"line_end":40,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":719},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/query.rs","byte_start":117405,"byte_end":117418,"line_start":4,"line_end":4,"column_start":10,"column_end":23},"name":"QueryResponse","qualname":"::results::query::QueryResponse","value":"Binary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":720},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/query.rs","byte_start":117722,"byte_end":117733,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"name":"QueryResult","qualname":"::results::query::QueryResult","value":"Result<QueryResponse, StdError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.12.1\", note =\n\"QueryResult is deprecated because it uses StdError, which should be replaced with custom errors in CosmWasm 0.11+. \\\n            Replace this with Result<QueryResponse, StdError> and consider migrating to custom errors from there.\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/query.rs","byte_start":117430,"byte_end":117712,"line_start":6,"line_end":10,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4720},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118999,"byte_end":119001,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::system_result::SystemResult::Ok","value":"SystemResult::Ok(S)","parent":{"krate":0,"index":4718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4723},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119041,"byte_end":119044,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::system_result::SystemResult::Err","value":"SystemResult::Err(SystemError)","parent":{"krate":0,"index":4718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"error\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119010,"byte_end":119036,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":4718},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118977,"byte_end":118989,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"SystemResult","qualname":"::results::system_result::SystemResult","value":"pub enum SystemResult<S> { Ok(S), Err(SystemError), }","parent":null,"children":[{"krate":0,"index":4720},{"krate":0,"index":4723}],"decl_id":null,"docs":" This is the outer result type returned by a querier to the contract.","sig":null,"attributes":[{"value":"/ This is the outer result type returned by a querier to the contract.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":117888,"byte_end":117960,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":117961,"byte_end":117964,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":117965,"byte_end":118049,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118050,"byte_end":118137,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118138,"byte_end":118223,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118224,"byte_end":118227,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118228,"byte_end":118242,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118243,"byte_end":118246,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118247,"byte_end":118259,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118260,"byte_end":118263,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118264,"byte_end":118271,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, ContractResult, SystemResult};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118272,"byte_end":118343,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ let data = Binary::from(b\"hello, world\");","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118344,"byte_end":118389,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ let result = SystemResult::Ok(ContractResult::Ok(data));","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118390,"byte_end":118450,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"ok\":\"aGVsbG8sIHdvcmxk\"}}\"#.to_vec());","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118451,"byte_end":118541,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118542,"byte_end":118549,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118550,"byte_end":118553,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118554,"byte_end":118566,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118567,"byte_end":118570,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118571,"byte_end":118578,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, ContractResult, SystemResult, SystemError};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118579,"byte_end":118663,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/ let error = SystemError::Unknown {};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118664,"byte_end":118704,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ let result: SystemResult<Binary> = SystemResult::Err(error);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118705,"byte_end":118769,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":{\"unknown\":{}}}\"#.to_vec());","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118770,"byte_end":118852,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118853,"byte_end":118860,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":118932,"byte_end":118967,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119354,"byte_end":119365,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"into_result","qualname":"<SystemResult<S>>::into_result","value":"pub fn into_result(Self) -> Result<S, SystemError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `ContractResult<S>` to a `Result<S, SystemError>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `ContractResult<S>` to a `Result<S, SystemError>` as a convenient way","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119219,"byte_end":119303,"line_start":43,"line_end":43,"column_start":5,"column_end":89}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119308,"byte_end":119342,"line_start":44,"line_end":44,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119463,"byte_end":119469,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<SystemResult<S>>::unwrap","value":"pub fn unwrap(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119577,"byte_end":119587,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<SystemResult<S>>::unwrap_err","value":"pub fn unwrap_err(Self) -> SystemError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":829},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/serde.rs","byte_start":120591,"byte_end":120601,"line_start":11,"line_end":11,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::serde::from_slice","value":"pub fn from_slice<T: DeserializeOwned>(&[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":832},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/serde.rs","byte_start":120758,"byte_end":120769,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"from_binary","qualname":"::serde::from_binary","value":"pub fn from_binary<T: DeserializeOwned>(&Binary) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":834},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/serde.rs","byte_start":120868,"byte_end":120874,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::serde::to_vec","value":"pub fn to_vec<T>(&T) -> StdResult<Vec<u8>> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":837},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/serde.rs","byte_start":121047,"byte_end":121056,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"to_binary","qualname":"::serde::to_binary","value":"pub fn to_binary<T>(&T) -> StdResult<Binary> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4726},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/storage.rs","byte_start":124066,"byte_end":124079,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"MemoryStorage","qualname":"::storage::MemoryStorage","value":"MemoryStorage {  }","parent":null,"children":[{"krate":0,"index":4727}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/storage.rs","byte_start":124155,"byte_end":124158,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<MemoryStorage>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":962},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135412,"byte_end":135419,"line_start":24,"line_end":24,"column_start":11,"column_end":18},"name":"Storage","qualname":"::traits::Storage","value":"Storage","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":967}],"decl_id":null,"docs":" Storage provides read and write access to a persistent storage.\n If you only want to provide read access, provide `&Storage`\n","sig":null,"attributes":[{"value":"/ Storage provides read and write access to a persistent storage.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135270,"byte_end":135337,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ If you only want to provide read access, provide `&Storage`","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135338,"byte_end":135401,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135725,"byte_end":135728,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"get","qualname":"::traits::Storage::get","value":"pub fn get(&Self, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":962},"children":[],"decl_id":null,"docs":" Returns None when key does not exist.\n Returns Some(Vec<u8>) when key exists.","sig":null,"attributes":[{"value":"/ Returns None when key does not exist.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135426,"byte_end":135467,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/ Returns Some(Vec<u8>) when key exists.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135472,"byte_end":135514,"line_start":26,"line_end":26,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135519,"byte_end":135522,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Note: Support for differentiating between a non-existent key and a key with empty value","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135527,"byte_end":135618,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ is not great yet and might not be possible in all backends. But we're trying to get there.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135623,"byte_end":135717,"line_start":29,"line_end":29,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136099,"byte_end":136104,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"range","qualname":"::traits::Storage::range","value":"pub fn range<'a>(&'a Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<dyn Iterator<Item = KV> + 'a>","parent":{"krate":0,"index":962},"children":[],"decl_id":null,"docs":" Allows iteration over a set of key/value pairs, either forwards or backwards.","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135773,"byte_end":135801,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/ Allows iteration over a set of key/value pairs, either forwards or backwards.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135806,"byte_end":135887,"line_start":33,"line_end":33,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135892,"byte_end":135895,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The bound `start` is inclusive and `end` is exclusive.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135900,"byte_end":135958,"line_start":35,"line_end":35,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135963,"byte_end":135966,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If `start` is lexicographically greater than or equal to `end`, an empty range is described, mo matter of the order.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":135971,"byte_end":136091,"line_start":37,"line_end":37,"column_start":5,"column_end":125}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136260,"byte_end":136263,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"set","qualname":"::traits::Storage::set","value":"pub fn set(&mut Self, &[u8], &[u8])","parent":{"krate":0,"index":962},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136543,"byte_end":136549,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"remove","qualname":"::traits::Storage::remove","value":"pub fn remove(&mut Self, &[u8])","parent":{"krate":0,"index":962},"children":[],"decl_id":null,"docs":" Removes a database entry at `key`.","sig":null,"attributes":[{"value":"/ Removes a database entry at `key`.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136306,"byte_end":136344,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136349,"byte_end":136352,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The current interface does not allow to differentiate between a key that existed","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136357,"byte_end":136441,"line_start":48,"line_end":48,"column_start":5,"column_end":89}},{"value":"/ before and one that didn't exist. See https://github.com/CosmWasm/cosmwasm/issues/290","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136446,"byte_end":136535,"line_start":49,"line_end":49,"column_start":5,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":968},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137524,"byte_end":137527,"line_start":67,"line_end":67,"column_start":11,"column_end":14},"name":"Api","qualname":"::traits::Api","value":"Api","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971}],"decl_id":null,"docs":" Api are callbacks to system functions implemented outside of the wasm modules.\n Currently it just supports address conversion but we could add eg. crypto functions here.","sig":null,"attributes":[{"value":"/ Api are callbacks to system functions implemented outside of the wasm modules.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136577,"byte_end":136659,"line_start":53,"line_end":53,"column_start":1,"column_end":83}},{"value":"/ Currently it just supports address conversion but we could add eg. crypto functions here.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136660,"byte_end":136753,"line_start":54,"line_end":54,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136754,"byte_end":136757,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This is a trait to allow mocks in the test code. Its members have a read-only","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136758,"byte_end":136839,"line_start":56,"line_end":56,"column_start":1,"column_end":82}},{"value":"/ reference to the Api instance to allow accessing configuration.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136840,"byte_end":136907,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/ Implementations must not have mutable state, such that an instance can freely","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136908,"byte_end":136989,"line_start":58,"line_end":58,"column_start":1,"column_end":82}},{"value":"/ be copied and shared between threads without affecting the behaviour.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":136990,"byte_end":137063,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ Given an Api instance, all members should return the same value when called with the same","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137064,"byte_end":137157,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/ arguments. In particular this means the result must not depend in the state of the chain.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137158,"byte_end":137251,"line_start":61,"line_end":61,"column_start":1,"column_end":94}},{"value":"/ If you need to access chaim state, you probably want to use the Querier.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137252,"byte_end":137328,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ Side effects (such as logging) are allowed.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137329,"byte_end":137376,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137377,"byte_end":137380,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ We can use feature flags to opt-in to non-essential methods","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137381,"byte_end":137444,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ for backwards compatibility in systems that don't have them all.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137445,"byte_end":137513,"line_start":66,"line_end":66,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137537,"byte_end":137554,"line_start":68,"line_end":68,"column_start":8,"column_end":25},"name":"canonical_address","qualname":"::traits::Api::canonical_address","value":"pub fn canonical_address(&Self, &HumanAddr) -> StdResult<CanonicalAddr>","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137617,"byte_end":137630,"line_start":69,"line_end":69,"column_start":8,"column_end":21},"name":"human_address","qualname":"::traits::Api::human_address","value":"pub fn human_address(&Self, &CanonicalAddr) -> StdResult<HumanAddr>","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137870,"byte_end":137875,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"debug","qualname":"::traits::Api::debug","value":"pub fn debug(&Self, &str)","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" Emits a debugging message that is handled depending on the environment (typically printed to console or ignored).\n Those messages are not persisted to chain.\n","sig":null,"attributes":[{"value":"/ Emits a debugging message that is handled depending on the environment (typically printed to console or ignored).","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137694,"byte_end":137811,"line_start":70,"line_end":70,"column_start":5,"column_end":122}},{"value":"/ Those messages are not persisted to chain.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137816,"byte_end":137862,"line_start":71,"line_end":71,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":972},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138029,"byte_end":138042,"line_start":76,"line_end":76,"column_start":10,"column_end":23},"name":"QuerierResult","qualname":"::traits::QuerierResult","value":"SystemResult<ContractResult<Binary>>","parent":null,"children":[],"decl_id":null,"docs":" A short-hand alias for the two-level query result (1. accessing the contract, 2. executing query in the contract)\n","sig":null,"attributes":[{"value":"/ A short-hand alias for the two-level query result (1. accessing the contract, 2. executing query in the contract)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":137902,"byte_end":138019,"line_start":75,"line_end":75,"column_start":1,"column_end":118}}]},{"kind":"Trait","id":{"krate":0,"index":973},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138094,"byte_end":138101,"line_start":78,"line_end":78,"column_start":11,"column_end":18},"name":"Querier","qualname":"::traits::Querier","value":"Querier","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138467,"byte_end":138476,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"raw_query","qualname":"::traits::Querier::raw_query","value":"pub fn raw_query(&Self, &[u8]) -> QuerierResult","parent":{"krate":0,"index":973},"children":[],"decl_id":null,"docs":" raw_query is all that must be implemented for the Querier.\n This allows us to pass through binary queries from one level to another without\n knowing the custom format, or we can decode it, with the knowledge of the allowed\n types. People using the querier probably want one of the simpler auto-generated\n helper methods\n","sig":null,"attributes":[{"value":"/ raw_query is all that must be implemented for the Querier.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138108,"byte_end":138170,"line_start":79,"line_end":79,"column_start":5,"column_end":67}},{"value":"/ This allows us to pass through binary queries from one level to another without","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138175,"byte_end":138258,"line_start":80,"line_end":80,"column_start":5,"column_end":88}},{"value":"/ knowing the custom format, or we can decode it, with the knowledge of the allowed","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138263,"byte_end":138348,"line_start":81,"line_end":81,"column_start":5,"column_end":90}},{"value":"/ types. People using the querier probably want one of the simpler auto-generated","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138353,"byte_end":138436,"line_start":82,"line_end":82,"column_start":5,"column_end":88}},{"value":"/ helper methods","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138441,"byte_end":138459,"line_start":83,"line_end":83,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4730},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138559,"byte_end":138573,"line_start":88,"line_end":88,"column_start":12,"column_end":26},"name":"QuerierWrapper","qualname":"::traits::QuerierWrapper","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138908,"byte_end":138911,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<QuerierWrapper>::new","value":"pub fn new(&'a dyn Querier) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":139161,"byte_end":139166,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"name":"query","qualname":"<QuerierWrapper>::query","value":"pub fn query<T: DeserializeOwned>(&Self, &QueryRequest<Empty>) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" query is a shorthand for custom_query when we are not using a custom type,\n this allows us to avoid specifying \"Empty\" in all the type definitions.\n","sig":null,"attributes":[{"value":"/ query is a shorthand for custom_query when we are not using a custom type,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138991,"byte_end":139069,"line_start":105,"line_end":105,"column_start":5,"column_end":83}},{"value":"/ this allows us to avoid specifying \"Empty\" in all the type definitions.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":139074,"byte_end":139149,"line_start":106,"line_end":106,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":139809,"byte_end":139821,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"custom_query","qualname":"<QuerierWrapper>::custom_query","value":"pub fn custom_query<C: CustomQuery,\nU: DeserializeOwned>(&Self, &QueryRequest<C>) -> StdResult<U>","parent":null,"children":[],"decl_id":null,"docs":" Makes the query and parses the response. Also handles custom queries,\n so you need to specify the custom query type in the function parameters.\n If you are no using a custom query, just use `query` for easier interface.","sig":null,"attributes":[{"value":"/ Makes the query and parses the response. Also handles custom queries,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":139290,"byte_end":139363,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ so you need to specify the custom query type in the function parameters.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":139368,"byte_end":139444,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ If you are no using a custom query, just use `query` for easier interface.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":139449,"byte_end":139527,"line_start":113,"line_end":113,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":139532,"byte_end":139535,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Any error (System Error, Error or called contract, or Parse Error) are flattened into","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":139540,"byte_end":139629,"line_start":115,"line_end":115,"column_start":5,"column_end":94}},{"value":"/ one level. Only use this if you don't need to check the SystemError","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":139634,"byte_end":139705,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ eg. If you don't differentiate between contract missing and contract returned error","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":139710,"byte_end":139797,"line_start":117,"line_end":117,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":140589,"byte_end":140602,"line_start":137,"line_end":137,"column_start":12,"column_end":25},"name":"query_balance","qualname":"<QuerierWrapper>::query_balance","value":"pub fn query_balance<U: Into<HumanAddr>>(&Self, U, &str) -> StdResult<Coin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":140920,"byte_end":140938,"line_start":147,"line_end":147,"column_start":12,"column_end":30},"name":"query_all_balances","qualname":"<QuerierWrapper>::query_all_balances","value":"pub fn query_all_balances<U: Into<HumanAddr>>(&Self, U)\n-> StdResult<Vec<Coin>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":141370,"byte_end":141386,"line_start":158,"line_end":158,"column_start":12,"column_end":28},"name":"query_wasm_smart","qualname":"<QuerierWrapper>::query_wasm_smart","value":"pub fn query_wasm_smart<T: DeserializeOwned, U: Serialize,\nV: Into<HumanAddr>>(&Self, V, &U) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":142176,"byte_end":142190,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"query_wasm_raw","qualname":"<QuerierWrapper>::query_wasm_raw","value":"pub fn query_wasm_raw<T: Into<HumanAddr>, U: Into<Binary>>(&Self, T, U)\n-> StdResult<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4739},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146283,"byte_end":146286,"line_start":8,"line_end":8,"column_start":12,"column_end":15},"name":"Env","qualname":"::types::Env","value":"Env { block, contract }","parent":null,"children":[{"krate":0,"index":4740},{"krate":0,"index":4741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4740},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146297,"byte_end":146302,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"block","qualname":"::types::Env::block","value":"types::BlockInfo","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4741},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146323,"byte_end":146331,"line_start":10,"line_end":10,"column_start":9,"column_end":17},"name":"contract","qualname":"::types::Env::contract","value":"types::ContractInfo","parent":{"krate":0,"index":4739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4804},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146441,"byte_end":146450,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"BlockInfo","qualname":"::types::BlockInfo","value":"BlockInfo { height, time, time_nanos, chain_id }","parent":null,"children":[{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4808}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4805},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146461,"byte_end":146467,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"height","qualname":"::types::BlockInfo::height","value":"u64","parent":{"krate":0,"index":4804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4806},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146810,"byte_end":146814,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"time","qualname":"::types::BlockInfo::time","value":"u64","parent":{"krate":0,"index":4804},"children":[],"decl_id":null,"docs":" Absolute time of the block creation in seconds since the UNIX epoch (00:00:00 on 1970-01-01 UTC).","sig":null,"attributes":[{"value":"/ Absolute time of the block creation in seconds since the UNIX epoch (00:00:00 on 1970-01-01 UTC).","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146478,"byte_end":146579,"line_start":16,"line_end":16,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146584,"byte_end":146587,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ The source of this is the [BFT Time in Tendermint](https://docs.tendermint.com/master/spec/consensus/bft-time.html),","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146592,"byte_end":146712,"line_start":18,"line_end":18,"column_start":5,"column_end":125}},{"value":"/ converted from nanoseconds to second precision by truncating the fractioal part.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146717,"byte_end":146801,"line_start":19,"line_end":19,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":4807},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148377,"byte_end":148387,"line_start":63,"line_end":63,"column_start":9,"column_end":19},"name":"time_nanos","qualname":"::types::BlockInfo::time_nanos","value":"u64","parent":{"krate":0,"index":4804},"children":[],"decl_id":null,"docs":" The fractional part of the block time in nanoseconds since `time` (0 to 999999999).\n Add this to `time` if you need a high precision block time.","sig":null,"attributes":[{"value":"/ The fractional part of the block time in nanoseconds since `time` (0 to 999999999).","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146825,"byte_end":146912,"line_start":21,"line_end":21,"column_start":5,"column_end":92}},{"value":"/ Add this to `time` if you need a high precision block time.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146917,"byte_end":146980,"line_start":22,"line_end":22,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146985,"byte_end":146988,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":146993,"byte_end":147007,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147012,"byte_end":147015,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Using chrono:","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147020,"byte_end":147037,"line_start":26,"line_end":26,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147042,"byte_end":147045,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147050,"byte_end":147057,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{BlockInfo, ContractInfo, Env, HumanAddr, MessageInfo};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147062,"byte_end":147141,"line_start":29,"line_end":29,"column_start":5,"column_end":84}},{"value":"/ # let env = Env {","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147146,"byte_end":147167,"line_start":30,"line_end":30,"column_start":5,"column_end":26}},{"value":"/ #     block: BlockInfo {","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147172,"byte_end":147200,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"/ #         height: 12_345,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147205,"byte_end":147234,"line_start":32,"line_end":32,"column_start":5,"column_end":34}},{"value":"/ #         time: 1_571_797_419,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147239,"byte_end":147273,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ #         time_nanos: 879305533,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147278,"byte_end":147314,"line_start":34,"line_end":34,"column_start":5,"column_end":41}},{"value":"/ #         chain_id: \"cosmos-testnet-14002\".to_string(),","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147319,"byte_end":147378,"line_start":35,"line_end":35,"column_start":5,"column_end":64}},{"value":"/ #     },","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147383,"byte_end":147395,"line_start":36,"line_end":36,"column_start":5,"column_end":17}},{"value":"/ #     contract: ContractInfo {","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147400,"byte_end":147434,"line_start":37,"line_end":37,"column_start":5,"column_end":39}},{"value":"/ #         address: HumanAddr::from(\"contract\"),","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147439,"byte_end":147490,"line_start":38,"line_end":38,"column_start":5,"column_end":56}},{"value":"/ #     },","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147495,"byte_end":147507,"line_start":39,"line_end":39,"column_start":5,"column_end":17}},{"value":"/ # };","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147512,"byte_end":147520,"line_start":40,"line_end":40,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono;","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147525,"byte_end":147551,"line_start":41,"line_end":41,"column_start":5,"column_end":31}},{"value":"/ use chrono::NaiveDateTime;","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147556,"byte_end":147586,"line_start":42,"line_end":42,"column_start":5,"column_end":35}},{"value":"/ let dt = NaiveDateTime::from_timestamp(env.block.time as i64, env.block.time_nanos as u32);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147591,"byte_end":147686,"line_start":43,"line_end":43,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147691,"byte_end":147698,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147703,"byte_end":147706,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Creating a simple millisecond-precision timestamp (as used in JavaScript):","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147711,"byte_end":147789,"line_start":46,"line_end":46,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147794,"byte_end":147797,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147802,"byte_end":147809,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{BlockInfo, ContractInfo, Env, HumanAddr, MessageInfo};","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147814,"byte_end":147893,"line_start":49,"line_end":49,"column_start":5,"column_end":84}},{"value":"/ # let env = Env {","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147898,"byte_end":147919,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ #     block: BlockInfo {","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147924,"byte_end":147952,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"/ #         height: 12_345,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147957,"byte_end":147986,"line_start":52,"line_end":52,"column_start":5,"column_end":34}},{"value":"/ #         time: 1_571_797_419,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":147991,"byte_end":148025,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ #         time_nanos: 879305533,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148030,"byte_end":148066,"line_start":54,"line_end":54,"column_start":5,"column_end":41}},{"value":"/ #         chain_id: \"cosmos-testnet-14002\".to_string(),","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148071,"byte_end":148130,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ #     },","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148135,"byte_end":148147,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ #     contract: ContractInfo {","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148152,"byte_end":148186,"line_start":57,"line_end":57,"column_start":5,"column_end":39}},{"value":"/ #         address: HumanAddr::from(\"contract\"),","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148191,"byte_end":148242,"line_start":58,"line_end":58,"column_start":5,"column_end":56}},{"value":"/ #     },","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148247,"byte_end":148259,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/ # };","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148264,"byte_end":148272,"line_start":60,"line_end":60,"column_start":5,"column_end":13}},{"value":"/ let millis = (env.block.time * 1_000) + (env.block.time_nanos / 1_000_000);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148277,"byte_end":148356,"line_start":61,"line_end":61,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148361,"byte_end":148368,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":4808},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148402,"byte_end":148410,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"chain_id","qualname":"::types::BlockInfo::chain_id","value":"std::string::String","parent":{"krate":0,"index":4804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4875},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148693,"byte_end":148704,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"MessageInfo","qualname":"::types::MessageInfo","value":"MessageInfo { sender, sent_funds }","parent":null,"children":[{"krate":0,"index":4876},{"krate":0,"index":4877}],"decl_id":null,"docs":" MessageInfo is sent with `init`, `handle`, and `migrate` calls, but not with queries.\n It contains the essential info for authorization - identity of the call, and payment\n","sig":null,"attributes":[{"value":"/ MessageInfo is sent with `init`, `handle`, and `migrate` calls, but not with queries.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148423,"byte_end":148512,"line_start":67,"line_end":67,"column_start":1,"column_end":90}},{"value":"/ It contains the essential info for authorization - identity of the call, and payment","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148513,"byte_end":148601,"line_start":68,"line_end":68,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":4876},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149507,"byte_end":149513,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"name":"sender","qualname":"::types::MessageInfo::sender","value":"addresses::HumanAddr","parent":{"krate":0,"index":4875},"children":[],"decl_id":null,"docs":" The `sender` field from the `wasm/MsgStoreCode`, `wasm/MsgInstantiateContract`, `wasm/MsgMigrateContract`\n or `wasm/MsgExecuteContract` message.\n You can think of this as the address that initiated the action (i.e. the message). What that\n means exactly heavily depends on the application.","sig":null,"attributes":[{"value":"/ The `sender` field from the `wasm/MsgStoreCode`, `wasm/MsgInstantiateContract`, `wasm/MsgMigrateContract`","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148711,"byte_end":148820,"line_start":71,"line_end":71,"column_start":5,"column_end":114}},{"value":"/ or `wasm/MsgExecuteContract` message.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148825,"byte_end":148866,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ You can think of this as the address that initiated the action (i.e. the message). What that","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148871,"byte_end":148967,"line_start":73,"line_end":73,"column_start":5,"column_end":101}},{"value":"/ means exactly heavily depends on the application.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":148972,"byte_end":149025,"line_start":74,"line_end":74,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149030,"byte_end":149033,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The x/wasm module ensures that the sender address signed the transaction.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149038,"byte_end":149115,"line_start":76,"line_end":76,"column_start":5,"column_end":82}},{"value":"/ Additional signers of the transaction that are either needed for other messages or contain unnecessary","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149120,"byte_end":149226,"line_start":77,"line_end":77,"column_start":5,"column_end":111}},{"value":"/ signatures are not propagated into the contract.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149231,"byte_end":149283,"line_start":78,"line_end":78,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149288,"byte_end":149291,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ There is a discussion to open up this field to multiple initiators, which you're welcome to join","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149296,"byte_end":149396,"line_start":80,"line_end":80,"column_start":5,"column_end":105}},{"value":"/ if you have a specific need for that feature: https://github.com/CosmWasm/cosmwasm/issues/293","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149401,"byte_end":149498,"line_start":81,"line_end":81,"column_start":5,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":4877},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149534,"byte_end":149544,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"name":"sent_funds","qualname":"::types::MessageInfo::sent_funds","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":4875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4940},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149651,"byte_end":149663,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"ContractInfo","qualname":"::types::ContractInfo","value":"ContractInfo { address }","parent":null,"children":[{"krate":0,"index":4941}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4941},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149674,"byte_end":149681,"line_start":88,"line_end":88,"column_start":9,"column_end":16},"name":"address","qualname":"::types::ContractInfo::address","value":"addresses::HumanAddr","parent":{"krate":0,"index":4940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5002},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":150158,"byte_end":150163,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"Empty","qualname":"::types::Empty","value":"Empty {  }","parent":null,"children":[],"decl_id":null,"docs":" An empty struct that serves as a placeholder in different places,\n such as contracts that don't set a custom message.","sig":null,"attributes":[{"value":"/ An empty struct that serves as a placeholder in different places,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149697,"byte_end":149766,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/ such as contracts that don't set a custom message.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149767,"byte_end":149821,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149822,"byte_end":149825,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ It is designed to be expressable in correct JSON and JSON Schema but","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149826,"byte_end":149898,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"/ contains no meaningful data. Previously we used enums without cases,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149899,"byte_end":149971,"line_start":95,"line_end":95,"column_start":1,"column_end":73}},{"value":"/ but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/types.rs","byte_start":149972,"byte_end":150075,"line_start":96,"line_end":96,"column_start":1,"column_end":104}}]},{"kind":"Const","id":{"krate":0,"index":1334},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":151457,"byte_end":151475,"line_start":20,"line_end":20,"column_start":11,"column_end":29},"name":"MOCK_CONTRACT_ADDR","qualname":"::mock::MOCK_CONTRACT_ADDR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1335},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":151646,"byte_end":151663,"line_start":24,"line_end":24,"column_start":8,"column_end":25},"name":"mock_dependencies","qualname":"::mock::mock_dependencies","value":"pub fn mock_dependencies(&[Coin])\n-> OwnedDeps<MockStorage, MockApi, MockQuerier>","parent":null,"children":[],"decl_id":null,"docs":" All external requirements that can be injected for unit tests.\n It sets the given balance for the contract itself, nothing else\n","sig":null,"attributes":[{"value":"/ All external requirements that can be injected for unit tests.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":151504,"byte_end":151570,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ It sets the given balance for the contract itself, nothing else","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":151571,"byte_end":151638,"line_start":23,"line_end":23,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1336},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":152136,"byte_end":152167,"line_start":37,"line_end":37,"column_start":8,"column_end":39},"name":"mock_dependencies_with_balances","qualname":"::mock::mock_dependencies_with_balances","value":"pub fn mock_dependencies_with_balances(&[(&HumanAddr, &[Coin])])\n-> OwnedDeps<MockStorage, MockApi, MockQuerier>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the querier along with the mock_dependencies.\n Sets all balances provided (yoy must explicitly set contract balance if desired)\n","sig":null,"attributes":[{"value":"/ Initializes the querier along with the mock_dependencies.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":151982,"byte_end":152043,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/ Sets all balances provided (yoy must explicitly set contract balance if desired)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":152044,"byte_end":152128,"line_start":36,"line_end":36,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":1337},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":152535,"byte_end":152546,"line_start":49,"line_end":49,"column_start":10,"column_end":21},"name":"MockStorage","qualname":"::mock::MockStorage","value":"MemoryStorage","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5058},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":152839,"byte_end":152846,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"MockApi","qualname":"::mock::MockApi","value":"MockApi { canonical_length }","parent":null,"children":[{"krate":0,"index":5059}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5059},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":152987,"byte_end":153003,"line_start":58,"line_end":58,"column_start":9,"column_end":25},"name":"canonical_length","qualname":"::mock::MockApi::canonical_length","value":"usize","parent":{"krate":0,"index":5058},"children":[],"decl_id":null,"docs":" Length of canonical addresses created with this API. Contracts should not make any assumtions\n what this value is.\n","sig":null,"attributes":[{"value":"/ Length of canonical addresses created with this API. Contracts should not make any assumtions","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":152853,"byte_end":152950,"line_start":56,"line_end":56,"column_start":5,"column_end":102}},{"value":"/ what this value is.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":152955,"byte_end":152978,"line_start":57,"line_end":57,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1345},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":155445,"byte_end":155453,"line_start":129,"line_end":129,"column_start":8,"column_end":16},"name":"mock_env","qualname":"::mock::mock_env","value":"pub fn mock_env() -> Env","parent":null,"children":[],"decl_id":null,"docs":" Returns a default enviroment with height, time, chain_id, and contract address\n You can submit as is to most contracts, or modify height/time if you want to\n test for expiration.","sig":null,"attributes":[{"value":"/ Returns a default enviroment with height, time, chain_id, and contract address","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":155197,"byte_end":155279,"line_start":124,"line_end":124,"column_start":1,"column_end":83}},{"value":"/ You can submit as is to most contracts, or modify height/time if you want to","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":155280,"byte_end":155360,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ test for expiration.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":155361,"byte_end":155385,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":155386,"byte_end":155389,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This is intended for use in test code only.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":155390,"byte_end":155437,"line_start":128,"line_end":128,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":1346},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":155903,"byte_end":155912,"line_start":145,"line_end":145,"column_start":8,"column_end":17},"name":"mock_info","qualname":"::mock::mock_info","value":"pub fn mock_info<U: Into<HumanAddr>>(U, &[Coin]) -> MessageInfo","parent":null,"children":[],"decl_id":null,"docs":" Just set sender and sent funds for the message. The essential for\n This is intended for use in test code only.\n","sig":null,"attributes":[{"value":"/ Just set sender and sent funds for the message. The essential for","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":155778,"byte_end":155847,"line_start":143,"line_end":143,"column_start":1,"column_end":70}},{"value":"/ This is intended for use in test code only.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":155848,"byte_end":155895,"line_start":144,"line_end":144,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1348},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":156220,"byte_end":156250,"line_start":154,"line_end":154,"column_start":10,"column_end":40},"name":"MockQuerierCustomHandlerResult","qualname":"::mock::MockQuerierCustomHandlerResult","value":"SystemResult<ContractResult<Binary>>","parent":null,"children":[],"decl_id":null,"docs":" The same type as cosmwasm-std's QuerierResult, but easier to reuse in\n cosmwasm-vm. It might diverge from QuerierResult at some point.\n","sig":null,"attributes":[{"value":"/ The same type as cosmwasm-std's QuerierResult, but easier to reuse in","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":156069,"byte_end":156142,"line_start":152,"line_end":152,"column_start":1,"column_end":74}},{"value":"/ cosmwasm-vm. It might diverge from QuerierResult at some point.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":156143,"byte_end":156210,"line_start":153,"line_end":153,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1349},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":156401,"byte_end":156412,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"MockQuerier","qualname":"::mock::MockQuerier","value":"MockQuerier {  }","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354}],"decl_id":null,"docs":" MockQuerier holds an immutable table of bank balances\n TODO: also allow querying contracts\n","sig":null,"attributes":[{"value":"/ MockQuerier holds an immutable table of bank balances","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":156292,"byte_end":156349,"line_start":156,"line_end":156,"column_start":1,"column_end":58}},{"value":"/ TODO: also allow querying contracts","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":156350,"byte_end":156389,"line_start":157,"line_end":157,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":156917,"byte_end":156920,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<MockQuerier<C>>::new","value":"pub fn new(&[(&HumanAddr, &[Coin])]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":157597,"byte_end":157611,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"update_balance","qualname":"<MockQuerier<C>>::update_balance","value":"pub fn update_balance<U: Into<HumanAddr>>(&mut Self, U, Vec<Coin>)\n-> Option<Vec<Coin>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":158092,"byte_end":158111,"line_start":204,"line_end":204,"column_start":12,"column_end":31},"name":"with_custom_handler","qualname":"<MockQuerier<C>>::with_custom_handler","value":"pub fn with_custom_handler<CH: 'static>(Self, CH) -> Self where CH: Fn(&C) ->\nMockQuerierCustomHandlerResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":158894,"byte_end":158906,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"handle_query","qualname":"<MockQuerier<C>>::handle_query","value":"pub fn handle_query(&Self, &QueryRequest<C>) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5068},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":159806,"byte_end":159817,"line_start":256,"line_end":256,"column_start":12,"column_end":23},"name":"BankQuerier","qualname":"::mock::BankQuerier","value":"BankQuerier {  }","parent":null,"children":[{"krate":0,"index":5069}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":159898,"byte_end":159901,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"name":"new","qualname":"<BankQuerier>::new","value":"pub fn new(&[(&HumanAddr, &[Coin])]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":160162,"byte_end":160167,"line_start":269,"line_end":269,"column_start":12,"column_end":17},"name":"query","qualname":"<BankQuerier>::query","value":"pub fn query(&Self, &BankQuery) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5074},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":161410,"byte_end":161424,"line_start":300,"line_end":300,"column_start":12,"column_end":26},"name":"StakingQuerier","qualname":"::mock::StakingQuerier","value":"StakingQuerier {  }","parent":null,"children":[{"krate":0,"index":5075},{"krate":0,"index":5076},{"krate":0,"index":5077}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":161552,"byte_end":161555,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"new","qualname":"<StakingQuerier>::new","value":"pub fn new(&str, &[Validator], &[FullDelegation]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":161820,"byte_end":161825,"line_start":315,"line_end":315,"column_start":12,"column_end":17},"name":"query","qualname":"<StakingQuerier>::query","value":"pub fn query(&Self, &StakingQuery) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1384},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":163602,"byte_end":163616,"line_start":363,"line_end":363,"column_start":8,"column_end":22},"name":"riffle_shuffle","qualname":"::mock::riffle_shuffle","value":"pub fn riffle_shuffle<T: Clone>(&[T]) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Performs a perfect shuffle (in shuffle)","sig":null,"attributes":[{"value":"/ Performs a perfect shuffle (in shuffle)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":163424,"byte_end":163467,"line_start":359,"line_end":359,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":163468,"byte_end":163471,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ https://en.wikipedia.org/wiki/Riffle_shuffle_permutation#Perfect_shuffles","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":163472,"byte_end":163549,"line_start":361,"line_end":361,"column_start":1,"column_end":78}},{"value":"/ https://en.wikipedia.org/wiki/In_shuffle","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":163550,"byte_end":163594,"line_start":362,"line_end":362,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1386},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":164009,"byte_end":164018,"line_start":378,"line_end":378,"column_start":8,"column_end":17},"name":"digit_sum","qualname":"::mock::digit_sum","value":"pub fn digit_sum(&[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1388},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2270,"byte_end":2277,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"name":"testing","qualname":"::testing","value":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1426}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/lib.rs","byte_start":2226,"byte_end":2261,"line_start":65,"line_end":65,"column_start":1,"column_end":36}}]}],"impls":[{"id":3,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":2868,"byte_end":2877,"line_start":11,"line_end":11,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":2962,"byte_end":2971,"line_start":17,"line_end":17,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":3095,"byte_end":3104,"line_start":23,"line_end":23,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":3212,"byte_end":3221,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":3338,"byte_end":3347,"line_start":35,"line_end":35,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":3460,"byte_end":3469,"line_start":41,"line_end":41,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":4043,"byte_end":4052,"line_start":53,"line_end":53,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":4290,"byte_end":4299,"line_start":63,"line_end":63,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":4658,"byte_end":4667,"line_start":78,"line_end":78,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5038,"byte_end":5051,"line_start":94,"line_end":94,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5151,"byte_end":5164,"line_start":100,"line_end":100,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5272,"byte_end":5275,"line_start":106,"line_end":106,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5780,"byte_end":5793,"line_start":117,"line_end":117,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5898,"byte_end":5911,"line_start":125,"line_end":125,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":6010,"byte_end":6023,"line_start":131,"line_end":131,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16382,"byte_end":16388,"line_start":17,"line_end":17,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":18500,"byte_end":18506,"line_start":79,"line_end":79,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":18640,"byte_end":18646,"line_start":85,"line_end":85,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":19095,"byte_end":19101,"line_start":96,"line_end":96,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":20537,"byte_end":20543,"line_start":140,"line_end":140,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":20631,"byte_end":20634,"line_start":146,"line_end":146,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":20794,"byte_end":20800,"line_start":153,"line_end":153,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":20992,"byte_end":20995,"line_start":161,"line_end":161,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":21167,"byte_end":21173,"line_start":169,"line_end":169,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":21519,"byte_end":21525,"line_start":185,"line_end":185,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":21769,"byte_end":21775,"line_start":195,"line_end":195,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":22006,"byte_end":22019,"line_start":206,"line_end":206,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34102,"byte_end":34106,"line_start":12,"line_end":12,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38246,"byte_end":38255,"line_start":27,"line_end":27,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38682,"byte_end":38689,"line_start":45,"line_end":45,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":46187,"byte_end":46195,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":48391,"byte_end":48399,"line_start":151,"line_end":151,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":52884,"byte_end":52892,"line_start":294,"line_end":294,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":53032,"byte_end":53040,"line_start":300,"line_end":300,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":61099,"byte_end":61110,"line_start":26,"line_end":26,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":61142,"byte_end":61153,"line_start":28,"line_end":28,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/iterator.rs","byte_start":62382,"byte_end":62387,"line_start":14,"line_end":14,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/iterator.rs","byte_start":62685,"byte_end":62690,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63449,"byte_end":63456,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":64557,"byte_end":64564,"line_start":58,"line_end":58,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":66680,"byte_end":66687,"line_start":107,"line_end":107,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":67206,"byte_end":67213,"line_start":124,"line_end":124,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":67378,"byte_end":67385,"line_start":133,"line_end":133,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":67629,"byte_end":67636,"line_start":143,"line_end":143,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":67870,"byte_end":67884,"line_start":154,"line_end":154,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68485,"byte_end":68492,"line_start":176,"line_end":176,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68768,"byte_end":68775,"line_start":192,"line_end":192,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68860,"byte_end":68867,"line_start":198,"line_end":198,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68962,"byte_end":68969,"line_start":204,"line_end":204,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69254,"byte_end":69261,"line_start":215,"line_end":215,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69350,"byte_end":69357,"line_start":221,"line_end":221,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69434,"byte_end":69441,"line_start":227,"line_end":227,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69571,"byte_end":69578,"line_start":233,"line_end":233,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69730,"byte_end":69737,"line_start":241,"line_end":241,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69894,"byte_end":69901,"line_start":249,"line_end":249,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":70029,"byte_end":70036,"line_start":255,"line_end":255,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":70154,"byte_end":70161,"line_start":261,"line_end":261,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":70323,"byte_end":70330,"line_start":269,"line_end":269,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":70883,"byte_end":70890,"line_start":283,"line_end":283,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":71233,"byte_end":71240,"line_start":296,"line_end":296,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":71353,"byte_end":71360,"line_start":304,"line_end":304,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":71892,"byte_end":71899,"line_start":319,"line_end":319,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":72143,"byte_end":72150,"line_start":329,"line_end":329,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":72384,"byte_end":72398,"line_start":340,"line_end":340,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":72855,"byte_end":72862,"line_start":358,"line_end":358,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":73013,"byte_end":73020,"line_start":364,"line_end":364,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90809,"byte_end":90814,"line_start":52,"line_end":52,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":91575,"byte_end":91587,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":91705,"byte_end":91717,"line_start":79,"line_end":79,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92012,"byte_end":92024,"line_start":92,"line_end":92,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94105,"byte_end":94115,"line_start":153,"line_end":153,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":98228,"byte_end":98235,"line_start":26,"line_end":26,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":98457,"byte_end":98464,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":98979,"byte_end":98991,"line_start":60,"line_end":60,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":99495,"byte_end":99509,"line_start":80,"line_end":80,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":99789,"byte_end":99804,"line_start":93,"line_end":93,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104558,"byte_end":104572,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104896,"byte_end":104910,"line_start":56,"line_end":56,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":105049,"byte_end":105063,"line_start":62,"line_end":62,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":105322,"byte_end":105328,"line_start":71,"line_end":71,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":111862,"byte_end":111871,"line_start":85,"line_end":85,"column_start":72,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":112219,"byte_end":112228,"line_start":98,"line_end":98,"column_start":72,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/handle.rs","byte_start":113471,"byte_end":113485,"line_start":23,"line_end":23,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/init.rs","byte_start":114636,"byte_end":114648,"line_start":21,"line_end":21,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/migrate.rs","byte_start":116700,"byte_end":116715,"line_start":23,"line_end":23,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119197,"byte_end":119209,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119548,"byte_end":119560,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119701,"byte_end":119713,"line_start":60,"line_end":60,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119962,"byte_end":119968,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/storage.rs","byte_start":124128,"byte_end":124141,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/storage.rs","byte_start":124230,"byte_end":124243,"line_start":23,"line_end":23,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/storage.rs","byte_start":126303,"byte_end":126316,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138746,"byte_end":138760,"line_start":92,"line_end":92,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138876,"byte_end":138890,"line_start":100,"line_end":100,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":153032,"byte_end":153039,"line_start":61,"line_end":61,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":153153,"byte_end":153160,"line_start":69,"line_end":69,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":156889,"byte_end":156900,"line_start":170,"line_end":170,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":158350,"byte_end":158361,"line_start":213,"line_end":213,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":158866,"byte_end":158877,"line_start":228,"line_end":228,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":159421,"byte_end":159434,"line_start":244,"line_end":244,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":159873,"byte_end":159884,"line_start":260,"line_end":260,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":161524,"byte_end":161538,"line_start":306,"line_end":306,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":2868,"byte_end":2877,"line_start":11,"line_end":11,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":2962,"byte_end":2971,"line_start":17,"line_end":17,"column_start":23,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":3095,"byte_end":3104,"line_start":23,"line_end":23,"column_start":21,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":3212,"byte_end":3221,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":3338,"byte_end":3347,"line_start":35,"line_end":35,"column_start":28,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":3460,"byte_end":3469,"line_start":41,"line_end":41,"column_start":23,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":4043,"byte_end":4052,"line_start":53,"line_end":53,"column_start":16,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":4290,"byte_end":4299,"line_start":63,"line_end":63,"column_start":25,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":4658,"byte_end":4667,"line_start":78,"line_end":78,"column_start":26,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5038,"byte_end":5051,"line_start":94,"line_end":94,"column_start":22,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1479},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5151,"byte_end":5164,"line_start":100,"line_end":100,"column_start":24,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1479},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5272,"byte_end":5275,"line_start":106,"line_end":106,"column_start":30,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":7089},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5780,"byte_end":5793,"line_start":117,"line_end":117,"column_start":16,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1479},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":5898,"byte_end":5911,"line_start":125,"line_end":125,"column_start":6,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/addresses.rs","byte_start":6010,"byte_end":6023,"line_start":131,"line_end":131,"column_start":23,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1479},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":16382,"byte_end":16388,"line_start":17,"line_end":17,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":18500,"byte_end":18506,"line_start":79,"line_end":79,"column_start":23,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":18640,"byte_end":18646,"line_start":85,"line_end":85,"column_start":22,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":19095,"byte_end":19101,"line_start":96,"line_end":96,"column_start":16,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":20537,"byte_end":20543,"line_start":140,"line_end":140,"column_start":24,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":20631,"byte_end":20634,"line_start":146,"line_end":146,"column_start":23,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":7089},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":20794,"byte_end":20800,"line_start":153,"line_end":153,"column_start":29,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":20992,"byte_end":20995,"line_start":161,"line_end":161,"column_start":28,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":7089},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":21167,"byte_end":21173,"line_start":169,"line_end":169,"column_start":27,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":21519,"byte_end":21525,"line_start":185,"line_end":185,"column_start":20,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1526},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":21769,"byte_end":21775,"line_start":195,"line_end":195,"column_start":32,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1526},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":22006,"byte_end":22019,"line_start":206,"line_end":206,"column_start":32,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":128},"to":{"krate":23,"index":1646}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":22710,"byte_end":22715,"line_start":228,"line_end":228,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/binary.rs","byte_start":22718,"byte_end":22723,"line_start":228,"line_end":228,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2957},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/coins.rs","byte_start":34102,"byte_end":34106,"line_start":12,"line_end":12,"column_start":6,"column_end":10},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38246,"byte_end":38255,"line_start":27,"line_end":27,"column_start":38,"column_end":47},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/deps.rs","byte_start":38682,"byte_end":38689,"line_start":45,"line_end":45,"column_start":10,"column_end":17},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":46187,"byte_end":46195,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":48391,"byte_end":48399,"line_start":151,"line_end":151,"column_start":30,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2273},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":52884,"byte_end":52892,"line_start":294,"line_end":294,"column_start":36,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2273},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/std_error.rs","byte_start":53032,"byte_end":53040,"line_start":300,"line_end":300,"column_start":43,"column_end":51},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2273},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":61099,"byte_end":61110,"line_start":26,"line_end":26,"column_start":28,"column_end":39},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2540},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/errors/system_error.rs","byte_start":61142,"byte_end":61153,"line_start":28,"line_end":28,"column_start":28,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2540},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/iterator.rs","byte_start":62382,"byte_end":62387,"line_start":14,"line_end":14,"column_start":23,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2552},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/iterator.rs","byte_start":62685,"byte_end":62690,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2552},"to":{"krate":2,"index":2960}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":63449,"byte_end":63456,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":64557,"byte_end":64564,"line_start":58,"line_end":58,"column_start":18,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2562},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":66680,"byte_end":66687,"line_start":107,"line_end":107,"column_start":23,"column_end":30},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2562},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":67206,"byte_end":67213,"line_start":124,"line_end":124,"column_start":19,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2562},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":67378,"byte_end":67385,"line_start":133,"line_end":133,"column_start":20,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2562},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":67629,"byte_end":67636,"line_start":143,"line_end":143,"column_start":32,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2562},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":67870,"byte_end":67884,"line_start":154,"line_end":154,"column_start":32,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":361},"to":{"krate":23,"index":1646}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68485,"byte_end":68492,"line_start":176,"line_end":176,"column_start":6,"column_end":13},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68768,"byte_end":68775,"line_start":192,"line_end":192,"column_start":21,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68860,"byte_end":68867,"line_start":198,"line_end":198,"column_start":20,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":68962,"byte_end":68969,"line_start":204,"line_end":204,"column_start":24,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69254,"byte_end":69261,"line_start":215,"line_end":215,"column_start":23,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2960}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69350,"byte_end":69357,"line_start":221,"line_end":221,"column_start":21,"column_end":28},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2960}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69434,"byte_end":69441,"line_start":227,"line_end":227,"column_start":23,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69571,"byte_end":69578,"line_start":233,"line_end":233,"column_start":28,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69730,"byte_end":69737,"line_start":241,"line_end":241,"column_start":36,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":69894,"byte_end":69901,"line_start":249,"line_end":249,"column_start":34,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":70029,"byte_end":70036,"line_start":255,"line_end":255,"column_start":42,"column_end":49},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":70154,"byte_end":70161,"line_start":261,"line_end":261,"column_start":28,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":3130}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":70323,"byte_end":70330,"line_start":269,"line_end":269,"column_start":36,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":3130}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":70883,"byte_end":70890,"line_start":283,"line_end":283,"column_start":28,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":71233,"byte_end":71240,"line_start":296,"line_end":296,"column_start":28,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2562},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":71353,"byte_end":71360,"line_start":304,"line_end":304,"column_start":6,"column_end":13},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":71892,"byte_end":71899,"line_start":319,"line_end":319,"column_start":20,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2586},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":72143,"byte_end":72150,"line_start":329,"line_end":329,"column_start":32,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2586},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":72384,"byte_end":72398,"line_start":340,"line_end":340,"column_start":32,"column_end":46},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":423},"to":{"krate":23,"index":1646}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":72855,"byte_end":72862,"line_start":358,"line_end":358,"column_start":23,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":7742}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/math.rs","byte_start":73013,"byte_end":73020,"line_start":364,"line_end":364,"column_start":31,"column_end":38},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":7742}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90774,"byte_end":90783,"line_start":50,"line_end":50,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":23,"index":2101},"to":{"krate":0,"index":464}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":90809,"byte_end":90814,"line_start":52,"line_end":52,"column_start":22,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5002},"to":{"krate":0,"index":464}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":91575,"byte_end":91587,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2679},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":91705,"byte_end":91717,"line_start":79,"line_end":79,"column_start":34,"column_end":46},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2679},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":92012,"byte_end":92024,"line_start":92,"line_end":92,"column_start":42,"column_end":54},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2679},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/query.rs","byte_start":94105,"byte_end":94115,"line_start":153,"line_end":153,"column_start":31,"column_end":41},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3402},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":98228,"byte_end":98235,"line_start":26,"line_end":26,"column_start":21,"column_end":28},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3794},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":98457,"byte_end":98464,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":98979,"byte_end":98991,"line_start":60,"line_end":60,"column_start":33,"column_end":45},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4504},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":99495,"byte_end":99509,"line_start":80,"line_end":80,"column_start":30,"column_end":44},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4428},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/context.rs","byte_start":99789,"byte_end":99804,"line_start":93,"line_end":93,"column_start":30,"column_end":45},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4577},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104558,"byte_end":104572,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":104896,"byte_end":104910,"line_start":56,"line_end":56,"column_start":21,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":105049,"byte_end":105063,"line_start":62,"line_end":62,"column_start":45,"column_end":59},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3876},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/contract_result.rs","byte_start":105322,"byte_end":105328,"line_start":71,"line_end":71,"column_start":37,"column_end":43},"kind":{"Impl":{"id":142}},"from":{"krate":2,"index":46413},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":111862,"byte_end":111871,"line_start":85,"line_end":85,"column_start":72,"column_end":81},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3953},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/cosmos_msg.rs","byte_start":112219,"byte_end":112228,"line_start":98,"line_end":98,"column_start":72,"column_end":81},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3953},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/handle.rs","byte_start":113471,"byte_end":113485,"line_start":23,"line_end":23,"column_start":21,"column_end":35},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4428},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/init.rs","byte_start":114636,"byte_end":114648,"line_start":21,"line_end":21,"column_start":21,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4504},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/migrate.rs","byte_start":116700,"byte_end":116715,"line_start":23,"line_end":23,"column_start":21,"column_end":36},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4577},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119197,"byte_end":119209,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119548,"byte_end":119560,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119701,"byte_end":119713,"line_start":60,"line_end":60,"column_start":42,"column_end":54},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4718},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/results/system_result.rs","byte_start":119962,"byte_end":119968,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":2,"index":46413},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/storage.rs","byte_start":124128,"byte_end":124141,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/storage.rs","byte_start":124230,"byte_end":124243,"line_start":23,"line_end":23,"column_start":18,"column_end":31},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4726},"to":{"krate":0,"index":962}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/storage.rs","byte_start":126303,"byte_end":126316,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4726},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138746,"byte_end":138760,"line_start":92,"line_end":92,"column_start":20,"column_end":34},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4730},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/traits.rs","byte_start":138876,"byte_end":138890,"line_start":100,"line_end":100,"column_start":10,"column_end":24},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":153032,"byte_end":153039,"line_start":61,"line_end":61,"column_start":18,"column_end":25},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5058},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":153153,"byte_end":153160,"line_start":69,"line_end":69,"column_start":14,"column_end":21},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5058},"to":{"krate":0,"index":968}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":156889,"byte_end":156900,"line_start":170,"line_end":170,"column_start":27,"column_end":38},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":158350,"byte_end":158361,"line_start":213,"line_end":213,"column_start":53,"column_end":64},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1349},"to":{"krate":0,"index":973}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":158866,"byte_end":158877,"line_start":228,"line_end":228,"column_start":41,"column_end":52},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":159421,"byte_end":159434,"line_start":244,"line_end":244,"column_start":6,"column_end":19},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":159873,"byte_end":159884,"line_start":260,"line_end":260,"column_start":6,"column_end":17},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-0.13.2/src/mock.rs","byte_start":161524,"byte_end":161538,"line_start":306,"line_end":306,"column_start":6,"column_end":20},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5074},"to":{"krate":4294967295,"index":4294967295}}]}