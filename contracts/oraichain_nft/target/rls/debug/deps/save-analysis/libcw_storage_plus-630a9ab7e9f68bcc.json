{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0","program":"/home/kj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cw_storage_plus","--edition=2018","/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"iterator\"","-C","metadata=630a9ab7e9f68bcc","-C","extra-filename=-630a9ab7e9f68bcc","--out-dir","/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps","-L","dependency=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps","--extern","cosmwasm_std=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libcosmwasm_std-7f1fa5b19c3e68d3.rmeta","--extern","schemars=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libschemars-f449b0a35ba37e19.rmeta","--extern","serde=/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libserde-6737841139abe9f9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/kj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kj/oraiwasm/package/plus/oraichain_nft/target/rls/debug/deps/libcw_storage_plus-630a9ab7e9f68bcc.rmeta"},"prelude":{"crate_id":{"name":"cw_storage_plus","disambiguator":[10505854313407209771,0]},"crate_root":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src","external_crates":[{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","num":20,"id":{"name":"serde","disambiguator":[16226190301537249563,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","num":21,"id":{"name":"serde_derive","disambiguator":[15475905651234449479,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":22,"id":{"name":"cosmwasm_std","disambiguator":[16504270971007114194,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":23,"id":{"name":"schemars","disambiguator":[12182862464473148887,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":24,"id":{"name":"schemars_derive","disambiguator":[3037027020480904855,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":25,"id":{"name":"serde_json","disambiguator":[7627530436705154322,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":26,"id":{"name":"itoa","disambiguator":[13487529298765147476,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":27,"id":{"name":"ryu","disambiguator":[4097666003317404566,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":28,"id":{"name":"thiserror","disambiguator":[4149436085188247112,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":29,"id":{"name":"thiserror_impl","disambiguator":[9917814298387580220,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":30,"id":{"name":"cosmwasm_derive","disambiguator":[12209117549304300058,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":31,"id":{"name":"base64","disambiguator":[5300500336962509114,0]}},{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/helpers.rs","num":32,"id":{"name":"serde_json_wasm","disambiguator":[13794344560351386905,0]}}],"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":0,"byte_end":705,"line_start":1,"line_end":26,"column_start":1,"column_end":43}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":155,"byte_end":161,"line_start":13,"line_end":13,"column_start":17,"column_end":23},"alias_span":null,"name":"Endian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":214,"byte_end":223,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"alias_span":null,"name":"IndexList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":225,"byte_end":235,"line_start":15,"line_end":15,"column_start":34,"column_end":44},"alias_span":null,"name":"IndexedMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":285,"byte_end":297,"line_start":17,"line_end":17,"column_start":19,"column_end":31},"alias_span":null,"name":"index_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":299,"byte_end":317,"line_start":17,"line_end":17,"column_start":33,"column_end":51},"alias_span":null,"name":"index_string_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":181},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":319,"byte_end":324,"line_start":17,"line_end":17,"column_start":53,"column_end":58},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":326,"byte_end":336,"line_start":17,"line_end":17,"column_start":60,"column_end":70},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":338,"byte_end":349,"line_start":17,"line_end":17,"column_start":72,"column_end":83},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":274},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":366,"byte_end":370,"line_start":18,"line_end":18,"column_start":15,"column_end":19},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":425},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":387,"byte_end":394,"line_start":19,"line_end":19,"column_start":16,"column_end":23},"alias_span":null,"name":"I128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":422},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":396,"byte_end":402,"line_start":19,"line_end":19,"column_start":25,"column_end":31},"alias_span":null,"name":"I16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":423},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":404,"byte_end":410,"line_start":19,"line_end":19,"column_start":33,"column_end":39},"alias_span":null,"name":"I32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":424},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":412,"byte_end":418,"line_start":19,"line_end":19,"column_start":41,"column_end":47},"alias_span":null,"name":"I64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":420,"byte_end":425,"line_start":19,"line_end":19,"column_start":49,"column_end":54},"alias_span":null,"name":"I8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":941},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":443,"byte_end":450,"line_start":20,"line_end":20,"column_start":16,"column_end":23},"alias_span":null,"name":"PkOwned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":942},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":443,"byte_end":450,"line_start":20,"line_end":20,"column_start":16,"column_end":23},"alias_span":null,"name":"PkOwned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":452,"byte_end":460,"line_start":20,"line_end":20,"column_start":25,"column_end":33},"alias_span":null,"name":"Prefixer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":333},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":462,"byte_end":472,"line_start":20,"line_end":20,"column_start":35,"column_end":45},"alias_span":null,"name":"PrimaryKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":420},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":474,"byte_end":481,"line_start":20,"line_end":20,"column_start":47,"column_end":54},"alias_span":null,"name":"U128Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":417},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":483,"byte_end":489,"line_start":20,"line_end":20,"column_start":56,"column_end":62},"alias_span":null,"name":"U16Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":418},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":491,"byte_end":497,"line_start":20,"line_end":20,"column_start":64,"column_end":70},"alias_span":null,"name":"U32Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":499,"byte_end":505,"line_start":20,"line_end":20,"column_start":72,"column_end":78},"alias_span":null,"name":"U64Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":507,"byte_end":512,"line_start":20,"line_end":20,"column_start":80,"column_end":85},"alias_span":null,"name":"U8Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":976},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":528,"byte_end":531,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":993},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":547,"byte_end":551,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":599,"byte_end":616,"line_start":24,"line_end":24,"column_start":18,"column_end":35},"alias_span":null,"name":"range_with_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1003},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":618,"byte_end":623,"line_start":24,"line_end":24,"column_start":37,"column_end":42},"alias_span":null,"name":"Bound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":625,"byte_end":631,"line_start":24,"line_end":24,"column_start":44,"column_end":50},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":680},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":682,"byte_end":693,"line_start":26,"line_end":26,"column_start":20,"column_end":31},"alias_span":null,"name":"SnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1025},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":695,"byte_end":703,"line_start":26,"line_end":26,"column_start":33,"column_end":41},"alias_span":null,"name":"Strategy","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","byte_start":0,"byte_end":705,"line_start":1,"line_end":26,"column_start":1,"column_end":43},"name":"","qualname":"::","value":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":15},{"krate":0,"index":41},{"krate":0,"index":120},{"krate":0,"index":244},{"krate":0,"index":294},{"krate":0,"index":316},{"krate":0,"index":444},{"krate":0,"index":509},{"krate":0,"index":559},{"krate":0,"index":627},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":811}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/endian.rs","byte_start":1167,"byte_end":1173,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Endian","qualname":"::endian::Endian","value":"Endian: Sized + Copy","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/endian.rs","byte_start":1199,"byte_end":1202,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Buf","qualname":"::endian::Endian::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/endian.rs","byte_start":1265,"byte_end":1276,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"to_le_bytes","qualname":"::endian::Endian::to_le_bytes","value":"pub fn to_le_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/endian.rs","byte_start":1304,"byte_end":1315,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"to_be_bytes","qualname":"::endian::Endian::to_be_bytes","value":"pub fn to_be_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/endian.rs","byte_start":1344,"byte_end":1357,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"from_le_bytes","qualname":"::endian::Endian::from_le_bytes","value":"pub fn from_le_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/endian.rs","byte_start":1392,"byte_end":1405,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"from_be_bytes","qualname":"::endian::Endian::from_be_bytes","value":"pub fn from_be_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":81},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8104,"byte_end":8113,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"name":"IndexList","qualname":"::indexed_map::IndexList","value":"IndexList<T>","parent":null,"children":[{"krate":0,"index":83}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8126,"byte_end":8137,"line_start":14,"line_end":14,"column_start":8,"column_end":19},"name":"get_indexes","qualname":"::indexed_map::IndexList::get_indexes","value":"pub fn get_indexes(&Self) -> Box<dyn Iterator<Item = &dyn Index<T>>>","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8334,"byte_end":8344,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"IndexedMap","qualname":"::indexed_map::IndexedMap","value":"IndexedMap { idx }","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"decl_id":null,"docs":" IndexedBucket works like a bucket but has a secondary index\n TODO: remove traits here and make this const fn new\n","sig":null,"attributes":[{"value":"/ IndexedBucket works like a bucket but has a secondary index","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8203,"byte_end":8266,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ TODO: remove traits here and make this const fn new","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8267,"byte_end":8322,"line_start":18,"line_end":18,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":91},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8625,"byte_end":8628,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_map::IndexedMap::idx","value":"I","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8515,"byte_end":8583,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8588,"byte_end":8616,"line_start":28,"line_end":28,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8846,"byte_end":8849,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedMap>::new","value":"pub fn new(&'a str, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" TODO: remove traits here and make this const fn new\n","sig":null,"attributes":[{"value":"/ TODO: remove traits here and make this const fn new","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8779,"byte_end":8834,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":9471,"byte_end":9475,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":9200,"byte_end":9286,"line_start":54,"line_end":54,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":9291,"byte_end":9354,"line_start":55,"line_end":55,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":9359,"byte_end":9459,"line_start":56,"line_end":56,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":9686,"byte_end":9692,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":10139,"byte_end":10146,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":9880,"byte_end":9976,"line_start":67,"line_end":67,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":9981,"byte_end":10068,"line_start":68,"line_end":68,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":10073,"byte_end":10127,"line_start":69,"line_end":69,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":11136,"byte_end":11142,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":10858,"byte_end":10928,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":10933,"byte_end":11019,"line_start":96,"line_end":96,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":11024,"byte_end":11027,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":11032,"byte_end":11124,"line_start":98,"line_end":98,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":11777,"byte_end":11781,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":11682,"byte_end":11765,"line_start":114,"line_end":114,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":12037,"byte_end":12045,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":11885,"byte_end":11982,"line_start":119,"line_end":119,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":11987,"byte_end":12025,"line_start":120,"line_end":120,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":12203,"byte_end":12209,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":12355,"byte_end":12365,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":12855,"byte_end":12860,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::KV<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":179},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":24053,"byte_end":24065,"line_start":17,"line_end":17,"column_start":8,"column_end":20},"name":"index_string","qualname":"::indexes::index_string","value":"pub fn index_string(&str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":24130,"byte_end":24148,"line_start":21,"line_end":21,"column_start":8,"column_end":26},"name":"index_string_tuple","qualname":"::indexes::index_string_tuple","value":"pub fn index_string_tuple(&str, &str) -> (PkOwned, PkOwned)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":181},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":24745,"byte_end":24750,"line_start":33,"line_end":33,"column_start":11,"column_end":16},"name":"Index","qualname":"::indexes::Index","value":"Index<T>","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":24814,"byte_end":24818,"line_start":37,"line_end":37,"column_start":8,"column_end":12},"name":"save","qualname":"::indexes::Index::save","value":"pub fn save(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":24897,"byte_end":24903,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"remove","qualname":"::indexes::Index::remove","value":"pub fn remove(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":24993,"byte_end":25003,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"MultiIndex","qualname":"::indexes::MultiIndex","value":"MultiIndex {  }","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":25307,"byte_end":25310,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiIndex>::new","value":"pub fn new(fn(: &T) -> Vec<u8>, &'a str, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":26131,"byte_end":26134,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"pks","qualname":"<MultiIndex>::pks","value":"pub fn pks<'c>(&Self, &'c dyn Storage, &[u8], Option<Bound>, Option<Bound>,\nOrder) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":26596,"byte_end":26601,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"name":"items","qualname":"<MultiIndex>::items","value":"pub fn items<'c>(&'c Self, &'c dyn Storage, &[u8], Option<Bound>,\nOption<Bound>, Order) -> Box<dyn Iterator<Item = StdResult<KV<T>>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":" returns all items that match this secondary index, always by pk Ascending\n","sig":null,"attributes":[{"value":"/ returns all items that match this secondary index, always by pk Ascending","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":26507,"byte_end":26584,"line_start":92,"line_end":92,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":27768,"byte_end":27779,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"UniqueIndex","qualname":"::indexes::UniqueIndex","value":"UniqueIndex {  }","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":27971,"byte_end":27974,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueIndex>::new","value":"pub fn new(fn(: &T) -> K, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":29409,"byte_end":29415,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"prefix","qualname":"<UniqueIndex>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":29552,"byte_end":29562,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<UniqueIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":29784,"byte_end":29788,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"item","qualname":"<UniqueIndex>::item","value":"pub fn item(&Self, &dyn Storage, K) -> StdResult<Option<KV<T>>>","parent":null,"children":[],"decl_id":null,"docs":" returns all items that match this secondary index, always by pk Ascending\n","sig":null,"attributes":[{"value":"/ returns all items that match this secondary index, always by pk Ascending","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":29695,"byte_end":29772,"line_start":196,"line_end":196,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":30370,"byte_end":30375,"line_start":215,"line_end":215,"column_start":12,"column_end":17},"name":"range","qualname":"<UniqueIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order) -> Box<dyn Iterator<Item = StdResult<KV<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":274},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":31072,"byte_end":31076,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Item","qualname":"::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"decl_id":null,"docs":" Item stores one typed item at the given key.\n This is an analog of Singleton.\n It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.\n","sig":null,"attributes":[{"value":"/ Item stores one typed item at the given key.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":30888,"byte_end":30936,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/ This is an analog of Singleton.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":30937,"byte_end":30972,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/ It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":30973,"byte_end":31060,"line_start":11,"line_end":11,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":31386,"byte_end":31389,"line_start":20,"line_end":20,"column_start":18,"column_end":21},"name":"new","qualname":"<Item>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":31676,"byte_end":31684,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Item>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":31836,"byte_end":31840,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"save","qualname":"<Item>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":31739,"byte_end":31824,"line_start":37,"line_end":37,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":31988,"byte_end":31994,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"remove","qualname":"<Item>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":32175,"byte_end":32179,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"load","qualname":"<Item>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":32080,"byte_end":32163,"line_start":47,"line_end":47,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":32471,"byte_end":32479,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Item>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":32319,"byte_end":32416,"line_start":53,"line_end":53,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":32421,"byte_end":32459,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":32904,"byte_end":32910,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"update","qualname":"<Item>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(T) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":32626,"byte_end":32696,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":32701,"byte_end":32787,"line_start":61,"line_end":61,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":32792,"byte_end":32795,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":32800,"byte_end":32892,"line_start":63,"line_end":63,"column_start":5,"column_end":97}}]},{"kind":"Trait","id":{"krate":0,"index":333},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":47197,"byte_end":47207,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"PrimaryKey","qualname":"::keys::PrimaryKey","value":"PrimaryKey<'a>: Clone","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":335},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":47230,"byte_end":47236,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Prefix","qualname":"::keys::PrimaryKey::Prefix","value":"type Prefix: Prefixer<'a>;","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":336},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":47261,"byte_end":47270,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"SubPrefix","qualname":"::keys::PrimaryKey::SubPrefix","value":"type SubPrefix: Prefixer<'a>;","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":47365,"byte_end":47368,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"key","qualname":"::keys::PrimaryKey::key","value":"pub fn key(&Self) -> Vec<&[u8]>","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" returns a slice of key steps, which can be optionally combined\n","sig":null,"attributes":[{"value":"/ returns a slice of key steps, which can be optionally combined","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":47291,"byte_end":47357,"line_start":12,"line_end":12,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":47399,"byte_end":47409,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"joined_key","qualname":"::keys::PrimaryKey::joined_key","value":"pub fn joined_key(&Self) -> Vec<u8>","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":47673,"byte_end":47682,"line_start":23,"line_end":23,"column_start":8,"column_end":17},"name":"parse_key","qualname":"::keys::PrimaryKey::parse_key","value":"pub fn parse_key(&'a [u8]) -> Self","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" extracts a single or composite key from a joined key,\n only lives as long as the original bytes\n","sig":null,"attributes":[{"value":"/ extracts a single or composite key from a joined key,","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":47559,"byte_end":47616,"line_start":21,"line_end":21,"column_start":5,"column_end":62}},{"value":"/ only lives as long as the original bytes","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":47621,"byte_end":47665,"line_start":22,"line_end":22,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":369},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":49869,"byte_end":49877,"line_start":103,"line_end":103,"column_start":11,"column_end":19},"name":"Prefixer","qualname":"::keys::Prefixer","value":"Prefixer<'a>","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":49992,"byte_end":49998,"line_start":105,"line_end":105,"column_start":8,"column_end":14},"name":"prefix","qualname":"::keys::Prefixer::prefix","value":"pub fn prefix(&Self) -> Vec<&[u8]>","parent":{"krate":0,"index":369},"children":[],"decl_id":null,"docs":" returns 0 or more namespaces that should length-prefixed and concatenated for range searches\n","sig":null,"attributes":[{"value":"/ returns 0 or more namespaces that should length-prefixed and concatenated for range searches","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":49888,"byte_end":49984,"line_start":104,"line_end":104,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":392},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":50983,"byte_end":50994,"line_start":145,"line_end":145,"column_start":11,"column_end":22},"name":"EmptyPrefix","qualname":"::keys::EmptyPrefix","value":"EmptyPrefix","parent":null,"children":[{"krate":0,"index":393}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":51004,"byte_end":51007,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"new","qualname":"::keys::EmptyPrefix::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":941},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":51182,"byte_end":51189,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"PkOwned","qualname":"::keys::PkOwned","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":943},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":51190,"byte_end":51201,"line_start":155,"line_end":155,"column_start":20,"column_end":31},"name":"0","qualname":"::keys::PkOwned::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":416},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52126,"byte_end":52131,"line_start":197,"line_end":197,"column_start":10,"column_end":15},"name":"U8Key","qualname":"::keys::U8Key","value":"IntKey<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":417},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52155,"byte_end":52161,"line_start":198,"line_end":198,"column_start":10,"column_end":16},"name":"U16Key","qualname":"::keys::U16Key","value":"IntKey<u16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":418},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52186,"byte_end":52192,"line_start":199,"line_end":199,"column_start":10,"column_end":16},"name":"U32Key","qualname":"::keys::U32Key","value":"IntKey<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":419},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52217,"byte_end":52223,"line_start":200,"line_end":200,"column_start":10,"column_end":16},"name":"U64Key","qualname":"::keys::U64Key","value":"IntKey<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":420},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52248,"byte_end":52255,"line_start":201,"line_end":201,"column_start":10,"column_end":17},"name":"U128Key","qualname":"::keys::U128Key","value":"IntKey<u128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":421},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52282,"byte_end":52287,"line_start":203,"line_end":203,"column_start":10,"column_end":15},"name":"I8Key","qualname":"::keys::I8Key","value":"IntKey<i8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":422},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52311,"byte_end":52317,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"name":"I16Key","qualname":"::keys::I16Key","value":"IntKey<i16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":423},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52342,"byte_end":52348,"line_start":205,"line_end":205,"column_start":10,"column_end":16},"name":"I32Key","qualname":"::keys::I32Key","value":"IntKey<i32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":424},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52373,"byte_end":52379,"line_start":206,"line_end":206,"column_start":10,"column_end":16},"name":"I64Key","qualname":"::keys::I64Key","value":"IntKey<i64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":425},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52404,"byte_end":52411,"line_start":207,"line_end":207,"column_start":10,"column_end":17},"name":"I128Key","qualname":"::keys::I128Key","value":"IntKey<i128>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":955},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52761,"byte_end":52767,"line_start":216,"line_end":216,"column_start":12,"column_end":18},"name":"IntKey","qualname":"::keys::IntKey","value":"IntKey { wrapped, data }","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958}],"decl_id":null,"docs":" It will cast one-particular int type into a Key via PkOwned, ensuring you don't mix up u32 and u64\n You can use new or the from/into pair to build a key from an int:","sig":null,"attributes":[{"value":"/ It will cast one-particular int type into a Key via PkOwned, ensuring you don't mix up u32 and u64","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52429,"byte_end":52531,"line_start":209,"line_end":209,"column_start":1,"column_end":103}},{"value":"/ You can use new or the from/into pair to build a key from an int:","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52532,"byte_end":52601,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52602,"byte_end":52605,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/   let k = U64Key::new(12345);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52606,"byte_end":52639,"line_start":212,"line_end":212,"column_start":1,"column_end":34}},{"value":"/   let k = U32Key::from(12345);","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52640,"byte_end":52674,"line_start":213,"line_end":213,"column_start":1,"column_end":35}},{"value":"/   let k: U16Key = 12345.into();","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52675,"byte_end":52710,"line_start":214,"line_end":214,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":957},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52789,"byte_end":52796,"line_start":217,"line_end":217,"column_start":9,"column_end":16},"name":"wrapped","qualname":"::keys::IntKey::wrapped","value":"keys::PkOwned","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":958},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52815,"byte_end":52819,"line_start":218,"line_end":218,"column_start":9,"column_end":13},"name":"data","qualname":"::keys::IntKey::data","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52879,"byte_end":52882,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<IntKey<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":976},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":58942,"byte_end":58945,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59213,"byte_end":59216,"line_start":22,"line_end":22,"column_start":18,"column_end":21},"name":"new","qualname":"<Map>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59504,"byte_end":59507,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"key","qualname":"<Map>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59629,"byte_end":59635,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Map>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59589,"byte_end":59617,"line_start":40,"line_end":40,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59772,"byte_end":59782,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<Map>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59732,"byte_end":59760,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59889,"byte_end":59893,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"save","qualname":"<Map>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60017,"byte_end":60023,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60204,"byte_end":60208,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"load","qualname":"<Map>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60109,"byte_end":60192,"line_start":58,"line_end":58,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60456,"byte_end":60464,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Map>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60304,"byte_end":60401,"line_start":63,"line_end":63,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60406,"byte_end":60444,"line_start":64,"line_end":64,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60850,"byte_end":60856,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"update","qualname":"<Map>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60572,"byte_end":60642,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60647,"byte_end":60733,"line_start":70,"line_end":70,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60738,"byte_end":60741,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":60746,"byte_end":60838,"line_start":72,"line_end":72,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":61444,"byte_end":61449,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"range","qualname":"<Map>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::KV<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":993},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":76244,"byte_end":76248,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":76766,"byte_end":76769,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":77172,"byte_end":77176,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"save","qualname":"<Path<T>>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":77075,"byte_end":77160,"line_start":45,"line_end":45,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":77325,"byte_end":77331,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"remove","qualname":"<Path<T>>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":77513,"byte_end":77517,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"load","qualname":"<Path<T>>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":77418,"byte_end":77501,"line_start":55,"line_end":55,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":77810,"byte_end":77818,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Path<T>>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":77658,"byte_end":77755,"line_start":61,"line_end":61,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":77760,"byte_end":77798,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":78244,"byte_end":78250,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"update","qualname":"<Path<T>>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":77966,"byte_end":78036,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":78041,"byte_end":78127,"line_start":69,"line_end":69,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":78132,"byte_end":78135,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":78140,"byte_end":78232,"line_start":71,"line_end":71,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1004},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79244,"byte_end":79253,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::prefix::Bound::Inclusive","value":"Bound::Inclusive(Vec<u8>)","parent":{"krate":0,"index":1003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1007},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79268,"byte_end":79277,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::prefix::Bound::Exclusive","value":"Bound::Exclusive(Vec<u8>)","parent":{"krate":0,"index":1003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1003},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79232,"byte_end":79237,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Bound","qualname":"::prefix::Bound","value":"pub enum Bound { Inclusive(Vec<u8>), Exclusive(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1007}],"decl_id":null,"docs":" Bound is used to defines the two ends of a range, more explicit than Option<u8>\n None means that we don't limit that side of the range at all.\n Include means we use the given bytes as a limit and *include* anything at that exact key\n Exclude means we use the given bytes as a limit and *exclude* anything at that exact key\n","sig":null,"attributes":[{"value":"/ Bound is used to defines the two ends of a range, more explicit than Option<u8>","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":78863,"byte_end":78946,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/ None means that we don't limit that side of the range at all.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":78947,"byte_end":79012,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ Include means we use the given bytes as a limit and *include* anything at that exact key","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79013,"byte_end":79105,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ Exclude means we use the given bytes as a limit and *exclude* anything at that exact key","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79106,"byte_end":79198,"line_start":16,"line_end":16,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79397,"byte_end":79406,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<Bound>::inclusive","value":"pub fn inclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an inclusive bound","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79308,"byte_end":79385,"line_start":24,"line_end":24,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79584,"byte_end":79593,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<Bound>::exclusive","value":"pub fn exclusive<T: Into<Vec<u8>>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns optional binary, like Option<CanonicalAddr> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns optional binary, like Option<CanonicalAddr> into an exclusive bound","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79495,"byte_end":79572,"line_start":29,"line_end":29,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79752,"byte_end":79765,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"inclusive_int","qualname":"<Bound>::inclusive_int","value":"pub fn inclusive_int<T: Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u32> into an inclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u32> into an inclusive bound","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79682,"byte_end":79740,"line_start":34,"line_end":34,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79931,"byte_end":79944,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"exclusive_int","qualname":"<Bound>::exclusive_int","value":"pub fn exclusive_int<T: Endian>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns an int, like Option<u64> into an exclusive bound\n","sig":null,"attributes":[{"value":"/ Turns an int, like Option<u64> into an exclusive bound","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79861,"byte_end":79919,"line_start":39,"line_end":39,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1014},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":80073,"byte_end":80079,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::prefix::Prefix","value":"Prefix {  }","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":80646,"byte_end":80649,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Prefix<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":80779,"byte_end":80788,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"new_de_fn","qualname":"<Prefix<T>>::new_de_fn","value":"pub fn new_de_fn(&[u8], &[&[u8]], fn(: KV) -> StdResult<KV<T>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":81192,"byte_end":81197,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"range","qualname":"<Prefix<T>>::range","value":"pub fn range<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<KV<T>>> + 'a> where T: 'a","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":620},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":81571,"byte_end":81588,"line_start":106,"line_end":106,"column_start":8,"column_end":25},"name":"range_with_prefix","qualname":"::prefix::range_with_prefix","value":"pub fn range_with_prefix<'a>(&'a dyn Storage, &[u8], Option<Bound>,\nOption<Bound>, Order) -> Box<dyn Iterator<Item = KV> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":680},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":88929,"byte_end":88940,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"SnapshotMap","qualname":"::snapshot::SnapshotMap","value":"SnapshotMap {  }","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687}],"decl_id":null,"docs":" Map that maintains a snapshots of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Map that maintains a snapshots of one or more checkpoints.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":88742,"byte_end":88804,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":88805,"byte_end":88863,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":88864,"byte_end":88917,"line_start":17,"line_end":17,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1026},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89448,"byte_end":89458,"line_start":34,"line_end":34,"column_start":5,"column_end":15},"name":"EveryBlock","qualname":"::snapshot::Strategy::EveryBlock","value":"Strategy::EveryBlock","parent":{"krate":0,"index":1025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1028},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89464,"byte_end":89469,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Never","qualname":"::snapshot::Strategy::Never","value":"Strategy::Never","parent":{"krate":0,"index":1025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1030},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89808,"byte_end":89816,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Selected","qualname":"::snapshot::Strategy::Selected","value":"Strategy::Selected","parent":{"krate":0,"index":1025},"children":[],"decl_id":null,"docs":" Only writes for linked blocks - does a few more reads to save some writes.\n Probably uses more gas, but less total disk usage.","sig":null,"attributes":[{"value":"/ Only writes for linked blocks - does a few more reads to save some writes.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89475,"byte_end":89553,"line_start":36,"line_end":36,"column_start":5,"column_end":83}},{"value":"/ Probably uses more gas, but less total disk usage.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89558,"byte_end":89612,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89617,"byte_end":89620,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Note that you need a trusted source (eg. own contract) to set/remove checkpoints.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89625,"byte_end":89710,"line_start":39,"line_end":39,"column_start":5,"column_end":90}},{"value":"/ Useful when the checkpoint setting happens in the same contract as the snapshotting.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89715,"byte_end":89803,"line_start":40,"line_end":40,"column_start":5,"column_end":93}}]},{"kind":"Enum","id":{"krate":0,"index":1025},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89433,"byte_end":89441,"line_start":33,"line_end":33,"column_start":10,"column_end":18},"name":"Strategy","qualname":"::snapshot::Strategy","value":"pub enum Strategy { EveryBlock, Never, Selected, }","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89958,"byte_end":89961,"line_start":46,"line_end":46,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotMap>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Usage: SnapshotMap::new(snapshot_names!(\"foobar\"), Strategy::EveryBlock)\n","sig":null,"attributes":[{"value":"/ Usage: SnapshotMap::new(snapshot_names!(\"foobar\"), Strategy::EveryBlock)","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89864,"byte_end":89940,"line_start":45,"line_end":45,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":90285,"byte_end":90299,"line_start":60,"line_end":60,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":90556,"byte_end":90573,"line_start":68,"line_end":68,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":91114,"byte_end":91117,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"key","qualname":"<SnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":91190,"byte_end":91196,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"prefix","qualname":"<SnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":93275,"byte_end":93279,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":93536,"byte_end":93542,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":93889,"byte_end":93893,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":93794,"byte_end":93877,"line_start":161,"line_end":161,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":94145,"byte_end":94153,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":93993,"byte_end":94090,"line_start":166,"line_end":166,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":94095,"byte_end":94133,"line_start":167,"line_end":167,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":94604,"byte_end":94622,"line_start":177,"line_end":177,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":95489,"byte_end":95508,"line_start":204,"line_end":204,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":96318,"byte_end":96324,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":95924,"byte_end":95994,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":95999,"byte_end":96085,"line_start":217,"line_end":217,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":96090,"byte_end":96093,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":96098,"byte_end":96190,"line_start":219,"line_end":219,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":96195,"byte_end":96198,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":96203,"byte_end":96306,"line_start":221,"line_end":221,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":97118,"byte_end":97123,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"range","qualname":"<SnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\ncosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::KV<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":10,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8654,"byte_end":8664,"line_start":32,"line_end":32,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":9075,"byte_end":9085,"line_start":48,"line_end":48,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":12549,"byte_end":12559,"line_start":137,"line_end":137,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":25242,"byte_end":25252,"line_start":48,"line_end":48,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":25577,"byte_end":25587,"line_start":59,"line_end":59,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":26049,"byte_end":26059,"line_start":75,"line_end":75,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":27902,"byte_end":27913,"line_start":138,"line_end":138,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":28225,"byte_end":28236,"line_start":149,"line_end":149,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":29300,"byte_end":29311,"line_start":183,"line_end":183,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":30087,"byte_end":30098,"line_start":207,"line_end":207,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":31355,"byte_end":31359,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":31553,"byte_end":31557,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":51233,"byte_end":51240,"line_start":157,"line_end":157,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":51475,"byte_end":51482,"line_start":170,"line_end":170,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":51696,"byte_end":51697,"line_start":177,"line_end":177,"column_start":72,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52036,"byte_end":52037,"line_start":191,"line_end":191,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52856,"byte_end":52862,"line_start":221,"line_end":221,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":53052,"byte_end":53058,"line_start":230,"line_end":230,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":53162,"byte_end":53168,"line_start":236,"line_end":236,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":53377,"byte_end":53383,"line_start":246,"line_end":246,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":53498,"byte_end":53504,"line_start":252,"line_end":252,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":53608,"byte_end":53614,"line_start":258,"line_end":258,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59180,"byte_end":59183,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59411,"byte_end":59414,"line_start":31,"line_end":31,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":61177,"byte_end":61180,"line_start":84,"line_end":84,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":76550,"byte_end":76554,"line_start":20,"line_end":20,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":76702,"byte_end":76706,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79296,"byte_end":79301,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":80423,"byte_end":80429,"line_start":57,"line_end":57,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":80580,"byte_end":80586,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89836,"byte_end":89847,"line_start":44,"line_end":44,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":90990,"byte_end":91001,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":96820,"byte_end":96831,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/endian.rs","byte_start":1175,"byte_end":1180,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":7}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/endian.rs","byte_start":1183,"byte_end":1187,"line_start":12,"line_end":12,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3067},"to":{"krate":0,"index":7}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":8654,"byte_end":8664,"line_start":32,"line_end":32,"column_start":19,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":9075,"byte_end":9085,"line_start":48,"line_end":48,"column_start":19,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexed_map.rs","byte_start":12549,"byte_end":12559,"line_start":137,"line_end":137,"column_start":19,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":25242,"byte_end":25252,"line_start":48,"line_end":48,"column_start":13,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":25577,"byte_end":25587,"line_start":59,"line_end":59,"column_start":26,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":185},"to":{"krate":0,"index":181}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":26049,"byte_end":26059,"line_start":75,"line_end":75,"column_start":13,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":27902,"byte_end":27913,"line_start":138,"line_end":138,"column_start":16,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":28225,"byte_end":28236,"line_start":149,"line_end":149,"column_start":29,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":181}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":29300,"byte_end":29311,"line_start":183,"line_end":183,"column_start":16,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/indexes.rs","byte_start":30087,"byte_end":30098,"line_start":207,"line_end":207,"column_start":16,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":31355,"byte_end":31359,"line_start":19,"line_end":19,"column_start":13,"column_end":17},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/item.rs","byte_start":31553,"byte_end":31557,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":47213,"byte_end":47218,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":51233,"byte_end":51240,"line_start":157,"line_end":157,"column_start":29,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":941},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":51475,"byte_end":51482,"line_start":170,"line_end":170,"column_start":27,"column_end":34},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":941},"to":{"krate":0,"index":369}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":51696,"byte_end":51697,"line_start":177,"line_end":177,"column_start":72,"column_end":73},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":407},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52036,"byte_end":52037,"line_start":191,"line_end":191,"column_start":46,"column_end":47},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":414},"to":{"krate":0,"index":369}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":52856,"byte_end":52862,"line_start":221,"line_end":221,"column_start":17,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":53052,"byte_end":53058,"line_start":230,"line_end":230,"column_start":29,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":53162,"byte_end":53168,"line_start":236,"line_end":236,"column_start":35,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":53377,"byte_end":53383,"line_start":246,"line_end":246,"column_start":35,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":53498,"byte_end":53504,"line_start":252,"line_end":252,"column_start":35,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":2960}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/keys.rs","byte_start":53608,"byte_end":53614,"line_start":258,"line_end":258,"column_start":36,"column_end":42},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59180,"byte_end":59183,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":59411,"byte_end":59414,"line_start":31,"line_end":31,"column_start":16,"column_end":19},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/map.rs","byte_start":61177,"byte_end":61180,"line_start":84,"line_end":84,"column_start":16,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":76550,"byte_end":76554,"line_start":20,"line_end":20,"column_start":19,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":993},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/path.rs","byte_start":76702,"byte_end":76706,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":79296,"byte_end":79301,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":80423,"byte_end":80429,"line_start":57,"line_end":57,"column_start":19,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1014},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/prefix.rs","byte_start":80580,"byte_end":80586,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":89836,"byte_end":89847,"line_start":44,"line_end":44,"column_start":16,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":90990,"byte_end":91001,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kj/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.5.0/src/snapshot.rs","byte_start":96820,"byte_end":96831,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":680},"to":{"krate":4294967295,"index":4294967295}}]}